// Copyright 2023 Alexey Lavrenchenko. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package personalwebsite.loggingmanager.sessions;

import "apis/logging-manager/sessions/logging_session_info.proto";

option go_package = "personal-website-v2/go-apis/logging-manager/sessions;sessions";

// Proto file describing the Logging session service.

// The logging session service definition.
service LoggingSessionService {
    // Creates and starts a logging session for the specified app
    // and returns logging session ID if the operation is successful.
    rpc CreateAndStart(CreateAndStartRequest) returns (CreateAndStartResponse) {}

    // Gets logging session info by the specified logging session ID.
    rpc GetById(GetByIdRequest) returns (GetByIdResponse) {}
}

// Request message for 'LoggingSessionService.CreateAndStart'.
message CreateAndStartRequest {
    // The app ID.
    uint64 app_id = 1;
}

// Response message for 'LoggingSessionService.CreateAndStart'.
message CreateAndStartResponse {
    // The logging session ID.
    uint64 id = 1;
}

// Request message for 'LoggingSessionService.GetById'.
message GetByIdRequest {
    // The logging session ID.
    uint64 id = 1;
}

// Response message for 'LoggingSessionService.GetById'.
message GetByIdResponse {
    // The logging session info.
    LoggingSessionInfo info = 1;
}
