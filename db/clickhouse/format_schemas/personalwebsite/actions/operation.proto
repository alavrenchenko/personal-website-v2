// Copyright 2023 Alexey Lavrenchenko. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package personalwebsite.actions;

import "personalwebsite/app/app_info.proto";

option go_package = "personal-website-v2/go-data/actions;actions";

// Proto file describing the Operation.

// The operation.
message Operation {
    // The unique ID to identify the operation.
    string id = 1;

    // The app info.
    personalwebsite.app.AppInfo app = 2;

    // The app session ID.
    uint64 app_session_id = 3;
    
    // The transaction ID.
    string tran_id = 4;
    
    // The action ID.
    string action_id = 5;

    // The operation type.
    uint64 type = 6;

    // The operation category.
    OperationCategoryEnum.OperationCategory category = 7;

    // The operation group.
    uint64 group = 8;

    // Optional. The parent operation ID.
    optional string parent_operation_id = 9;

    // Optional. The JSON-encoded params.
    optional string params = 10;

    // The date and time (in microseconds) at which the operation was created.
    int64 created_at = 11;

    // The status of the operation can be New(1), InProgress(2), Success(3), or Failure(4).
    OperationStatusEnum.OperationStatus status = 12;

    // The date and time (in microseconds) at which the operation was started.
    int64 start_time = 13;

    // Optional. The date and time (in microseconds) at which the operation was ended.
    optional int64 end_time = 14;

    // Optional. The elapsed time, in microseconds.
    optional int64 elapsed_time_us = 15;
}

// Container for enum describing the operation category.
message OperationCategoryEnum {
    // The operation category.
    enum OperationCategory {
        // Unspecified. Do not use.
        UNSPECIFIED = 0;
    
        // Common operations.
        COMMON = 1;
    
        // Identification, authentication, authorization user/client.
        IDENTITY = 2;
        
        // For example, MySQL, PostgreSQL.
        DATABASE = 3;
        
        // For example, Redis.
        CACHE_STORAGE = 4;
    }
}

// Container for enum describing the operation status.
message OperationStatusEnum {
    // The operation status.
    enum OperationStatus {
        // Unspecified. Do not use.
        UNSPECIFIED = 0;
        NEW = 1;
        IN_PROGRESS = 2;
        SUCCESS = 3;
        FAILURE = 4;
    }
}
