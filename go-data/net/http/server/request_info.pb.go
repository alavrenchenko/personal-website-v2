// Copyright 2023 Alexey Lavrenchenko. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.3
// source: data/net/http/server/request_info.proto

package server

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	app "personal-website-v2/go-data/app"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request status.
type RequestStatusEnum_RequestStatus int32

const (
	// Unspecified. Do not use.
	RequestStatusEnum_UNSPECIFIED RequestStatusEnum_RequestStatus = 0
	RequestStatusEnum_NEW         RequestStatusEnum_RequestStatus = 1
	RequestStatusEnum_IN_PROGRESS RequestStatusEnum_RequestStatus = 2
	RequestStatusEnum_SUCCESS     RequestStatusEnum_RequestStatus = 3
	RequestStatusEnum_FAILURE     RequestStatusEnum_RequestStatus = 4
)

// Enum value maps for RequestStatusEnum_RequestStatus.
var (
	RequestStatusEnum_RequestStatus_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "NEW",
		2: "IN_PROGRESS",
		3: "SUCCESS",
		4: "FAILURE",
	}
	RequestStatusEnum_RequestStatus_value = map[string]int32{
		"UNSPECIFIED": 0,
		"NEW":         1,
		"IN_PROGRESS": 2,
		"SUCCESS":     3,
		"FAILURE":     4,
	}
)

func (x RequestStatusEnum_RequestStatus) Enum() *RequestStatusEnum_RequestStatus {
	p := new(RequestStatusEnum_RequestStatus)
	*p = x
	return p
}

func (x RequestStatusEnum_RequestStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestStatusEnum_RequestStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_data_net_http_server_request_info_proto_enumTypes[0].Descriptor()
}

func (RequestStatusEnum_RequestStatus) Type() protoreflect.EnumType {
	return &file_data_net_http_server_request_info_proto_enumTypes[0]
}

func (x RequestStatusEnum_RequestStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestStatusEnum_RequestStatus.Descriptor instead.
func (RequestStatusEnum_RequestStatus) EnumDescriptor() ([]byte, []int) {
	return file_data_net_http_server_request_info_proto_rawDescGZIP(), []int{1, 0}
}

// The request info.
type RequestInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique ID to identify the request.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The app info.
	App *app.AppInfo `protobuf:"bytes,2,opt,name=app,proto3" json:"app,omitempty"`
	// The app session ID.
	AppSessionId uint64 `protobuf:"varint,3,opt,name=app_session_id,json=appSessionId,proto3" json:"app_session_id,omitempty"`
	// The HTTP server ID.
	HttpServerId uint32 `protobuf:"varint,4,opt,name=http_server_id,json=httpServerId,proto3" json:"http_server_id,omitempty"`
	// The status of the request can be New(1), InProgress(2), Success(3), or Failure(4).
	Status RequestStatusEnum_RequestStatus `protobuf:"varint,5,opt,name=status,proto3,enum=personalwebsite.net.http.server.RequestStatusEnum_RequestStatus" json:"status,omitempty"`
	// The date and time (in microseconds) at which the request was started.
	StartTime int64 `protobuf:"varint,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// Optional. The date and time (in microseconds) at which the request was ended.
	EndTime *int64 `protobuf:"varint,7,opt,name=end_time,json=endTime,proto3,oneof" json:"end_time,omitempty"`
	// Optional. The elapsed time, in microseconds.
	ElapsedTimeUs *int64 `protobuf:"varint,8,opt,name=elapsed_time_us,json=elapsedTimeUs,proto3,oneof" json:"elapsed_time_us,omitempty"`
	Url           string `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	Method        string `protobuf:"bytes,10,opt,name=method,proto3" json:"method,omitempty"`
	Protocol      string `protobuf:"bytes,11,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Host          string `protobuf:"bytes,12,opt,name=host,proto3" json:"host,omitempty"`
	// "IP:port"
	RemoteAddr    string `protobuf:"bytes,13,opt,name=remote_addr,json=remoteAddr,proto3" json:"remote_addr,omitempty"`
	RequestUri    string `protobuf:"bytes,14,opt,name=request_uri,json=requestUri,proto3" json:"request_uri,omitempty"`
	ContentLength int64  `protobuf:"varint,15,opt,name=content_length,json=contentLength,proto3" json:"content_length,omitempty"`
	// The JSON-encoded headers.
	Headers string `protobuf:"bytes,16,opt,name=headers,proto3" json:"headers,omitempty"`
	// headers
	XRealIp       string `protobuf:"bytes,17,opt,name=x_real_ip,json=xRealIp,proto3" json:"x_real_ip,omitempty"`
	XForwardedFor string `protobuf:"bytes,18,opt,name=x_forwarded_for,json=xForwardedFor,proto3" json:"x_forwarded_for,omitempty"`
	ContentType   string `protobuf:"bytes,19,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Origin        string `protobuf:"bytes,20,opt,name=origin,proto3" json:"origin,omitempty"`
	Referer       string `protobuf:"bytes,21,opt,name=referer,proto3" json:"referer,omitempty"`
	UserAgent     string `protobuf:"bytes,22,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
}

func (x *RequestInfo) Reset() {
	*x = RequestInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_net_http_server_request_info_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestInfo) ProtoMessage() {}

func (x *RequestInfo) ProtoReflect() protoreflect.Message {
	mi := &file_data_net_http_server_request_info_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestInfo.ProtoReflect.Descriptor instead.
func (*RequestInfo) Descriptor() ([]byte, []int) {
	return file_data_net_http_server_request_info_proto_rawDescGZIP(), []int{0}
}

func (x *RequestInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RequestInfo) GetApp() *app.AppInfo {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *RequestInfo) GetAppSessionId() uint64 {
	if x != nil {
		return x.AppSessionId
	}
	return 0
}

func (x *RequestInfo) GetHttpServerId() uint32 {
	if x != nil {
		return x.HttpServerId
	}
	return 0
}

func (x *RequestInfo) GetStatus() RequestStatusEnum_RequestStatus {
	if x != nil {
		return x.Status
	}
	return RequestStatusEnum_UNSPECIFIED
}

func (x *RequestInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *RequestInfo) GetEndTime() int64 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *RequestInfo) GetElapsedTimeUs() int64 {
	if x != nil && x.ElapsedTimeUs != nil {
		return *x.ElapsedTimeUs
	}
	return 0
}

func (x *RequestInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RequestInfo) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *RequestInfo) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *RequestInfo) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *RequestInfo) GetRemoteAddr() string {
	if x != nil {
		return x.RemoteAddr
	}
	return ""
}

func (x *RequestInfo) GetRequestUri() string {
	if x != nil {
		return x.RequestUri
	}
	return ""
}

func (x *RequestInfo) GetContentLength() int64 {
	if x != nil {
		return x.ContentLength
	}
	return 0
}

func (x *RequestInfo) GetHeaders() string {
	if x != nil {
		return x.Headers
	}
	return ""
}

func (x *RequestInfo) GetXRealIp() string {
	if x != nil {
		return x.XRealIp
	}
	return ""
}

func (x *RequestInfo) GetXForwardedFor() string {
	if x != nil {
		return x.XForwardedFor
	}
	return ""
}

func (x *RequestInfo) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *RequestInfo) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *RequestInfo) GetReferer() string {
	if x != nil {
		return x.Referer
	}
	return ""
}

func (x *RequestInfo) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

// Container for enum describing the request status.
type RequestStatusEnum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RequestStatusEnum) Reset() {
	*x = RequestStatusEnum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_net_http_server_request_info_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestStatusEnum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestStatusEnum) ProtoMessage() {}

func (x *RequestStatusEnum) ProtoReflect() protoreflect.Message {
	mi := &file_data_net_http_server_request_info_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestStatusEnum.ProtoReflect.Descriptor instead.
func (*RequestStatusEnum) Descriptor() ([]byte, []int) {
	return file_data_net_http_server_request_info_proto_rawDescGZIP(), []int{1}
}

var File_data_net_http_server_request_info_proto protoreflect.FileDescriptor

var file_data_net_http_server_request_info_proto_rawDesc = []byte{
	0x0a, 0x27, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x6e, 0x65, 0x74, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x68,
	0x74, 0x74, 0x70, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x17, 0x64, 0x61, 0x74, 0x61,
	0x2f, 0x61, 0x70, 0x70, 0x2f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x95, 0x06, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69,
	0x74, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03,
	0x61, 0x70, 0x70, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x61, 0x70, 0x70,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x74, 0x74,
	0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x68, 0x74, 0x74, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x58, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x40, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74,
	0x65, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45,
	0x6e, 0x75, 0x6d, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x65, 0x6c, 0x61, 0x70,
	0x73, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x01, 0x52, 0x0d, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x55, 0x73, 0x88, 0x01, 0x01, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x72,
	0x69, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x12, 0x1a, 0x0a, 0x09, 0x78, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x69, 0x70, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x78, 0x52, 0x65, 0x61, 0x6c, 0x49, 0x70, 0x12, 0x26,
	0x0a, 0x0f, 0x78, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x66, 0x6f,
	0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x78, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x72, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x65, 0x6c, 0x61, 0x70,
	0x73, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x73, 0x22, 0x69, 0x0a, 0x11, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x75, 0x6d,
	0x22, 0x54, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x45, 0x57, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x49,
	0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07,
	0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x41, 0x49,
	0x4c, 0x55, 0x52, 0x45, 0x10, 0x04, 0x42, 0x34, 0x5a, 0x32, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x2d, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2d, 0x76, 0x32, 0x2f, 0x67, 0x6f,
	0x2d, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x6e, 0x65, 0x74, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_data_net_http_server_request_info_proto_rawDescOnce sync.Once
	file_data_net_http_server_request_info_proto_rawDescData = file_data_net_http_server_request_info_proto_rawDesc
)

func file_data_net_http_server_request_info_proto_rawDescGZIP() []byte {
	file_data_net_http_server_request_info_proto_rawDescOnce.Do(func() {
		file_data_net_http_server_request_info_proto_rawDescData = protoimpl.X.CompressGZIP(file_data_net_http_server_request_info_proto_rawDescData)
	})
	return file_data_net_http_server_request_info_proto_rawDescData
}

var file_data_net_http_server_request_info_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_data_net_http_server_request_info_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_data_net_http_server_request_info_proto_goTypes = []interface{}{
	(RequestStatusEnum_RequestStatus)(0), // 0: personalwebsite.net.http.server.RequestStatusEnum.RequestStatus
	(*RequestInfo)(nil),                  // 1: personalwebsite.net.http.server.RequestInfo
	(*RequestStatusEnum)(nil),            // 2: personalwebsite.net.http.server.RequestStatusEnum
	(*app.AppInfo)(nil),                  // 3: personalwebsite.app.AppInfo
}
var file_data_net_http_server_request_info_proto_depIdxs = []int32{
	3, // 0: personalwebsite.net.http.server.RequestInfo.app:type_name -> personalwebsite.app.AppInfo
	0, // 1: personalwebsite.net.http.server.RequestInfo.status:type_name -> personalwebsite.net.http.server.RequestStatusEnum.RequestStatus
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_data_net_http_server_request_info_proto_init() }
func file_data_net_http_server_request_info_proto_init() {
	if File_data_net_http_server_request_info_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_data_net_http_server_request_info_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_net_http_server_request_info_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestStatusEnum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_data_net_http_server_request_info_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_data_net_http_server_request_info_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_data_net_http_server_request_info_proto_goTypes,
		DependencyIndexes: file_data_net_http_server_request_info_proto_depIdxs,
		EnumInfos:         file_data_net_http_server_request_info_proto_enumTypes,
		MessageInfos:      file_data_net_http_server_request_info_proto_msgTypes,
	}.Build()
	File_data_net_http_server_request_info_proto = out.File
	file_data_net_http_server_request_info_proto_rawDesc = nil
	file_data_net_http_server_request_info_proto_goTypes = nil
	file_data_net_http_server_request_info_proto_depIdxs = nil
}
