// Copyright 2023 Alexey Lavrenchenko. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.3
// source: data/logging/log_entry.proto

package logging

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	actions "personal-website-v2/go-data/actions"
	app "personal-website-v2/go-data/app"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The log level.
type LogLevel int32

const (
	LogLevel_TRACE   LogLevel = 0
	LogLevel_DEBUG   LogLevel = 1
	LogLevel_INFO    LogLevel = 2
	LogLevel_WARNING LogLevel = 3
	LogLevel_ERROR   LogLevel = 4
	LogLevel_FATAL   LogLevel = 5
	// None. Do not use.
	LogLevel_NONE LogLevel = 6
)

// Enum value maps for LogLevel.
var (
	LogLevel_name = map[int32]string{
		0: "TRACE",
		1: "DEBUG",
		2: "INFO",
		3: "WARNING",
		4: "ERROR",
		5: "FATAL",
		6: "NONE",
	}
	LogLevel_value = map[string]int32{
		"TRACE":   0,
		"DEBUG":   1,
		"INFO":    2,
		"WARNING": 3,
		"ERROR":   4,
		"FATAL":   5,
		"NONE":    6,
	}
)

func (x LogLevel) Enum() *LogLevel {
	p := new(LogLevel)
	*p = x
	return p
}

func (x LogLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_data_logging_log_entry_proto_enumTypes[0].Descriptor()
}

func (LogLevel) Type() protoreflect.EnumType {
	return &file_data_logging_log_entry_proto_enumTypes[0]
}

func (x LogLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogLevel.Descriptor instead.
func (LogLevel) EnumDescriptor() ([]byte, []int) {
	return file_data_logging_log_entry_proto_rawDescGZIP(), []int{0}
}

// The event category.
type EventCategoryEnum_EventCategory int32

const (
	EventCategoryEnum_UNKNOWN EventCategoryEnum_EventCategory = 0
	// Common events.
	EventCategoryEnum_COMMON EventCategoryEnum_EventCategory = 1
	// Events in this category are related to creating, modifying, or deleting
	// the settings or parameters of an application, process, or system.
	EventCategoryEnum_CONFIGURATION EventCategoryEnum_EventCategory = 2
	// Identification, authentication, authorization user/client.
	EventCategoryEnum_IDENTITY EventCategoryEnum_EventCategory = 3
	// For example, MySQL, PostgreSQL.
	EventCategoryEnum_DATABASE EventCategoryEnum_EventCategory = 4
	// For example, Redis.
	EventCategoryEnum_CACHE_STORAGE EventCategoryEnum_EventCategory = 5
	// Fields: transport: HTTP, gRPC
	EventCategoryEnum_NETWORK EventCategoryEnum_EventCategory = 6
)

// Enum value maps for EventCategoryEnum_EventCategory.
var (
	EventCategoryEnum_EventCategory_name = map[int32]string{
		0: "UNKNOWN",
		1: "COMMON",
		2: "CONFIGURATION",
		3: "IDENTITY",
		4: "DATABASE",
		5: "CACHE_STORAGE",
		6: "NETWORK",
	}
	EventCategoryEnum_EventCategory_value = map[string]int32{
		"UNKNOWN":       0,
		"COMMON":        1,
		"CONFIGURATION": 2,
		"IDENTITY":      3,
		"DATABASE":      4,
		"CACHE_STORAGE": 5,
		"NETWORK":       6,
	}
)

func (x EventCategoryEnum_EventCategory) Enum() *EventCategoryEnum_EventCategory {
	p := new(EventCategoryEnum_EventCategory)
	*p = x
	return p
}

func (x EventCategoryEnum_EventCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventCategoryEnum_EventCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_data_logging_log_entry_proto_enumTypes[1].Descriptor()
}

func (EventCategoryEnum_EventCategory) Type() protoreflect.EnumType {
	return &file_data_logging_log_entry_proto_enumTypes[1]
}

func (x EventCategoryEnum_EventCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventCategoryEnum_EventCategory.Descriptor instead.
func (EventCategoryEnum_EventCategory) EnumDescriptor() ([]byte, []int) {
	return file_data_logging_log_entry_proto_rawDescGZIP(), []int{6, 0}
}

// The error category.
type ErrorCategoryEnum_ErrorCategory int32

const (
	// Unspecified. Do not use.
	ErrorCategoryEnum_UNSPECIFIED ErrorCategoryEnum_ErrorCategory = 0
	// Common errors.
	ErrorCategoryEnum_COMMON ErrorCategoryEnum_ErrorCategory = 1
	// API errors.
	ErrorCategoryEnum_API ErrorCategoryEnum_ErrorCategory = 2
	// Database errors.
	ErrorCategoryEnum_DATABASE ErrorCategoryEnum_ErrorCategory = 3
)

// Enum value maps for ErrorCategoryEnum_ErrorCategory.
var (
	ErrorCategoryEnum_ErrorCategory_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "COMMON",
		2: "API",
		3: "DATABASE",
	}
	ErrorCategoryEnum_ErrorCategory_value = map[string]int32{
		"UNSPECIFIED": 0,
		"COMMON":      1,
		"API":         2,
		"DATABASE":    3,
	}
)

func (x ErrorCategoryEnum_ErrorCategory) Enum() *ErrorCategoryEnum_ErrorCategory {
	p := new(ErrorCategoryEnum_ErrorCategory)
	*p = x
	return p
}

func (x ErrorCategoryEnum_ErrorCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCategoryEnum_ErrorCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_data_logging_log_entry_proto_enumTypes[2].Descriptor()
}

func (ErrorCategoryEnum_ErrorCategory) Type() protoreflect.EnumType {
	return &file_data_logging_log_entry_proto_enumTypes[2]
}

func (x ErrorCategoryEnum_ErrorCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCategoryEnum_ErrorCategory.Descriptor instead.
func (ErrorCategoryEnum_ErrorCategory) EnumDescriptor() ([]byte, []int) {
	return file_data_logging_log_entry_proto_rawDescGZIP(), []int{9, 0}
}

// The log entry.
type LogEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique ID to identify the log entry.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The time (in microseconds) when the event occured.
	Timestamp int64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The app info.
	App *app.AppInfo `protobuf:"bytes,3,opt,name=app,proto3" json:"app,omitempty"`
	// The agent.
	Agent *Agent `protobuf:"bytes,4,opt,name=agent,proto3" json:"agent,omitempty"`
	// The logging session ID.
	LoggingSessionId uint64 `protobuf:"varint,5,opt,name=logging_session_id,json=loggingSessionId,proto3" json:"logging_session_id,omitempty"`
	// Optional. The app session ID.
	AppSessionId *uint64 `protobuf:"varint,6,opt,name=app_session_id,json=appSessionId,proto3,oneof" json:"app_session_id,omitempty"`
	// Optional. The transaction.
	Tran *Transaction `protobuf:"bytes,7,opt,name=tran,proto3" json:"tran,omitempty"`
	// Optional. The action.
	Action *Action `protobuf:"bytes,8,opt,name=action,proto3" json:"action,omitempty"`
	// Optional. The operation.
	Operation *Operation `protobuf:"bytes,9,opt,name=operation,proto3" json:"operation,omitempty"`
	// The log level.
	Level LogLevel `protobuf:"varint,10,opt,name=level,proto3,enum=personalwebsite.logging.LogLevel" json:"level,omitempty"`
	// The logger category name.
	Category string `protobuf:"bytes,11,opt,name=category,proto3" json:"category,omitempty"`
	// The event related to this entry.
	Event *Event `protobuf:"bytes,12,opt,name=event,proto3" json:"event,omitempty"`
	// Optional. The error related to this entry.
	Error *Error `protobuf:"bytes,13,opt,name=error,proto3" json:"error,omitempty"`
	// The message related to this entry.
	Message string `protobuf:"bytes,14,opt,name=message,proto3" json:"message,omitempty"`
	// Optional. The JSON-encoded fields.
	Fields *string `protobuf:"bytes,15,opt,name=fields,proto3,oneof" json:"fields,omitempty"`
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_logging_log_entry_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_data_logging_log_entry_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_data_logging_log_entry_proto_rawDescGZIP(), []int{0}
}

func (x *LogEntry) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LogEntry) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *LogEntry) GetApp() *app.AppInfo {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *LogEntry) GetAgent() *Agent {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *LogEntry) GetLoggingSessionId() uint64 {
	if x != nil {
		return x.LoggingSessionId
	}
	return 0
}

func (x *LogEntry) GetAppSessionId() uint64 {
	if x != nil && x.AppSessionId != nil {
		return *x.AppSessionId
	}
	return 0
}

func (x *LogEntry) GetTran() *Transaction {
	if x != nil {
		return x.Tran
	}
	return nil
}

func (x *LogEntry) GetAction() *Action {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *LogEntry) GetOperation() *Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *LogEntry) GetLevel() LogLevel {
	if x != nil {
		return x.Level
	}
	return LogLevel_TRACE
}

func (x *LogEntry) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *LogEntry) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *LogEntry) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *LogEntry) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LogEntry) GetFields() string {
	if x != nil && x.Fields != nil {
		return *x.Fields
	}
	return ""
}

// The agent.
type Agent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The agent name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The agent type.
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// The agent version.
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Agent) Reset() {
	*x = Agent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_logging_log_entry_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Agent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agent) ProtoMessage() {}

func (x *Agent) ProtoReflect() protoreflect.Message {
	mi := &file_data_logging_log_entry_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agent.ProtoReflect.Descriptor instead.
func (*Agent) Descriptor() ([]byte, []int) {
	return file_data_logging_log_entry_proto_rawDescGZIP(), []int{1}
}

func (x *Agent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Agent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Agent) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// The transaction.
// See ../data/actions/transaction.proto:/^message.Transaction.
type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The transaction ID.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_logging_log_entry_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_data_logging_log_entry_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_data_logging_log_entry_proto_rawDescGZIP(), []int{2}
}

func (x *Transaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// The action.
// See ../data/actions/action.proto:/^message.Action.
type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The action ID.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The action type.
	Type uint64 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	// The action category.
	Category actions.ActionCategoryEnum_ActionCategory `protobuf:"varint,3,opt,name=category,proto3,enum=personalwebsite.actions.ActionCategoryEnum_ActionCategory" json:"category,omitempty"`
	// The action group.
	Group uint64 `protobuf:"varint,4,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_logging_log_entry_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_data_logging_log_entry_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_data_logging_log_entry_proto_rawDescGZIP(), []int{3}
}

func (x *Action) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Action) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Action) GetCategory() actions.ActionCategoryEnum_ActionCategory {
	if x != nil {
		return x.Category
	}
	return actions.ActionCategoryEnum_ActionCategory(0)
}

func (x *Action) GetGroup() uint64 {
	if x != nil {
		return x.Group
	}
	return 0
}

// The operation.
// See ../data/actions/operation.proto:/^message.Operation.
type Operation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The operation ID.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The operation type.
	Type uint64 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	// The operation category.
	Category actions.OperationCategoryEnum_OperationCategory `protobuf:"varint,3,opt,name=category,proto3,enum=personalwebsite.actions.OperationCategoryEnum_OperationCategory" json:"category,omitempty"`
	// The operation group.
	Group uint64 `protobuf:"varint,4,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *Operation) Reset() {
	*x = Operation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_logging_log_entry_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation) ProtoMessage() {}

func (x *Operation) ProtoReflect() protoreflect.Message {
	mi := &file_data_logging_log_entry_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation.ProtoReflect.Descriptor instead.
func (*Operation) Descriptor() ([]byte, []int) {
	return file_data_logging_log_entry_proto_rawDescGZIP(), []int{4}
}

func (x *Operation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Operation) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Operation) GetCategory() actions.OperationCategoryEnum_OperationCategory {
	if x != nil {
		return x.Category
	}
	return actions.OperationCategoryEnum_OperationCategory(0)
}

func (x *Operation) GetGroup() uint64 {
	if x != nil {
		return x.Group
	}
	return 0
}

// The event.
type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The event ID (code).
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// The short description of this type of event.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The event category.
	Category EventCategoryEnum_EventCategory `protobuf:"varint,3,opt,name=category,proto3,enum=personalwebsite.logging.EventCategoryEnum_EventCategory" json:"category,omitempty"`
	// The event group.
	Group uint64 `protobuf:"varint,4,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_logging_log_entry_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_data_logging_log_entry_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_data_logging_log_entry_proto_rawDescGZIP(), []int{5}
}

func (x *Event) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Event) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Event) GetCategory() EventCategoryEnum_EventCategory {
	if x != nil {
		return x.Category
	}
	return EventCategoryEnum_UNKNOWN
}

func (x *Event) GetGroup() uint64 {
	if x != nil {
		return x.Group
	}
	return 0
}

// Container for enum describing the event category.
type EventCategoryEnum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EventCategoryEnum) Reset() {
	*x = EventCategoryEnum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_logging_log_entry_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventCategoryEnum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCategoryEnum) ProtoMessage() {}

func (x *EventCategoryEnum) ProtoReflect() protoreflect.Message {
	mi := &file_data_logging_log_entry_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventCategoryEnum.ProtoReflect.Descriptor instead.
func (*EventCategoryEnum) Descriptor() ([]byte, []int) {
	return file_data_logging_log_entry_proto_rawDescGZIP(), []int{6}
}

// The error.
type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The error code.
	Code uint64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// The error message.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// The error type.
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// The error category.
	Category ErrorCategoryEnum_ErrorCategory `protobuf:"varint,4,opt,name=category,proto3,enum=personalwebsite.logging.ErrorCategoryEnum_ErrorCategory" json:"category,omitempty"`
	// The stack trace of the error.
	StackTrace    string         `protobuf:"bytes,5,opt,name=stack_trace,json=stackTrace,proto3" json:"stack_trace,omitempty"`
	OriginalError *OriginalError `protobuf:"bytes,6,opt,name=original_error,json=originalError,proto3" json:"original_error,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_logging_log_entry_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_data_logging_log_entry_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_data_logging_log_entry_proto_rawDescGZIP(), []int{7}
}

func (x *Error) GetCode() uint64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Error) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Error) GetCategory() ErrorCategoryEnum_ErrorCategory {
	if x != nil {
		return x.Category
	}
	return ErrorCategoryEnum_UNSPECIFIED
}

func (x *Error) GetStackTrace() string {
	if x != nil {
		return x.StackTrace
	}
	return ""
}

func (x *Error) GetOriginalError() *OriginalError {
	if x != nil {
		return x.OriginalError
	}
	return nil
}

// The original error.
type OriginalError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The error code.
	Code uint64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// The error message.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// The error type.
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// The error category.
	Category ErrorCategoryEnum_ErrorCategory `protobuf:"varint,4,opt,name=category,proto3,enum=personalwebsite.logging.ErrorCategoryEnum_ErrorCategory" json:"category,omitempty"`
	// The stack trace of the error.
	StackTrace string `protobuf:"bytes,5,opt,name=stack_trace,json=stackTrace,proto3" json:"stack_trace,omitempty"`
}

func (x *OriginalError) Reset() {
	*x = OriginalError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_logging_log_entry_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OriginalError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OriginalError) ProtoMessage() {}

func (x *OriginalError) ProtoReflect() protoreflect.Message {
	mi := &file_data_logging_log_entry_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OriginalError.ProtoReflect.Descriptor instead.
func (*OriginalError) Descriptor() ([]byte, []int) {
	return file_data_logging_log_entry_proto_rawDescGZIP(), []int{8}
}

func (x *OriginalError) GetCode() uint64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OriginalError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *OriginalError) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OriginalError) GetCategory() ErrorCategoryEnum_ErrorCategory {
	if x != nil {
		return x.Category
	}
	return ErrorCategoryEnum_UNSPECIFIED
}

func (x *OriginalError) GetStackTrace() string {
	if x != nil {
		return x.StackTrace
	}
	return ""
}

// Container for enum describing the error category.
type ErrorCategoryEnum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ErrorCategoryEnum) Reset() {
	*x = ErrorCategoryEnum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_logging_log_entry_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorCategoryEnum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorCategoryEnum) ProtoMessage() {}

func (x *ErrorCategoryEnum) ProtoReflect() protoreflect.Message {
	mi := &file_data_logging_log_entry_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorCategoryEnum.ProtoReflect.Descriptor instead.
func (*ErrorCategoryEnum) Descriptor() ([]byte, []int) {
	return file_data_logging_log_entry_proto_rawDescGZIP(), []int{9}
}

var File_data_logging_log_entry_proto protoreflect.FileDescriptor

var file_data_logging_log_entry_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x6c,
	0x6f, 0x67, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e,
	0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x1a, 0x17, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x61, 0x70,
	0x70, 0x2f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x19, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x64, 0x61, 0x74,
	0x61, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc2, 0x05, 0x0a, 0x08, 0x4c, 0x6f,
	0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x2e, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73,
	0x69, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x03, 0x61, 0x70, 0x70, 0x12, 0x34, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65,
	0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x6f,
	0x67, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x5f,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x48, 0x00, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x04, 0x74, 0x72, 0x61, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73,
	0x69, 0x74, 0x65, 0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x74, 0x72, 0x61, 0x6e, 0x12, 0x37, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e,
	0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x6c, 0x6f, 0x67, 0x67,
	0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e,
	0x67, 0x2e, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x34, 0x0a,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x6c,
	0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62,
	0x73, 0x69, 0x74, 0x65, 0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x88, 0x01, 0x01,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x49,
	0x0a, 0x05, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x1d, 0x0a, 0x0b, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x06, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x56, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0xa3, 0x01, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x5c, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x40, 0x2e, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x97, 0x01, 0x0a, 0x05,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x54, 0x0a, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x6c, 0x6f,
	0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x8c, 0x01, 0x0a, 0x11, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x75, 0x6d, 0x22, 0x77, 0x0a, 0x0d, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4f, 0x4d,
	0x4d, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55,
	0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x44, 0x45, 0x4e,
	0x54, 0x49, 0x54, 0x59, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x41, 0x54, 0x41, 0x42, 0x41,
	0x53, 0x45, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x41, 0x43, 0x48, 0x45, 0x5f, 0x53, 0x54,
	0x4f, 0x52, 0x41, 0x47, 0x45, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x45, 0x54, 0x57, 0x4f,
	0x52, 0x4b, 0x10, 0x06, 0x22, 0x8f, 0x02, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x54, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x38, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62,
	0x73, 0x69, 0x74, 0x65, 0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x54, 0x72, 0x61, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74,
	0x65, 0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xc8, 0x01, 0x0a, 0x0d, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x54, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x6c,
	0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x63,
	0x65, 0x22, 0x58, 0x0a, 0x11, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x45, 0x6e, 0x75, 0x6d, 0x22, 0x43, 0x0a, 0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4f, 0x4d, 0x4d,
	0x4f, 0x4e, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x50, 0x49, 0x10, 0x02, 0x12, 0x0c, 0x0a,
	0x08, 0x44, 0x41, 0x54, 0x41, 0x42, 0x41, 0x53, 0x45, 0x10, 0x03, 0x2a, 0x57, 0x0a, 0x08, 0x4c,
	0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x52, 0x41, 0x43, 0x45,
	0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x45, 0x42, 0x55, 0x47, 0x10, 0x01, 0x12, 0x08, 0x0a,
	0x04, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x52, 0x4e, 0x49,
	0x4e, 0x47, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12,
	0x09, 0x0a, 0x05, 0x46, 0x41, 0x54, 0x41, 0x4c, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x06, 0x42, 0x2d, 0x5a, 0x2b, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x2d, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2d, 0x76, 0x32, 0x2f, 0x67, 0x6f, 0x2d, 0x64,
	0x61, 0x74, 0x61, 0x2f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x3b, 0x6c, 0x6f, 0x67, 0x67,
	0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_data_logging_log_entry_proto_rawDescOnce sync.Once
	file_data_logging_log_entry_proto_rawDescData = file_data_logging_log_entry_proto_rawDesc
)

func file_data_logging_log_entry_proto_rawDescGZIP() []byte {
	file_data_logging_log_entry_proto_rawDescOnce.Do(func() {
		file_data_logging_log_entry_proto_rawDescData = protoimpl.X.CompressGZIP(file_data_logging_log_entry_proto_rawDescData)
	})
	return file_data_logging_log_entry_proto_rawDescData
}

var file_data_logging_log_entry_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_data_logging_log_entry_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_data_logging_log_entry_proto_goTypes = []interface{}{
	(LogLevel)(0),                                  // 0: personalwebsite.logging.LogLevel
	(EventCategoryEnum_EventCategory)(0),           // 1: personalwebsite.logging.EventCategoryEnum.EventCategory
	(ErrorCategoryEnum_ErrorCategory)(0),           // 2: personalwebsite.logging.ErrorCategoryEnum.ErrorCategory
	(*LogEntry)(nil),                               // 3: personalwebsite.logging.LogEntry
	(*Agent)(nil),                                  // 4: personalwebsite.logging.Agent
	(*Transaction)(nil),                            // 5: personalwebsite.logging.Transaction
	(*Action)(nil),                                 // 6: personalwebsite.logging.Action
	(*Operation)(nil),                              // 7: personalwebsite.logging.Operation
	(*Event)(nil),                                  // 8: personalwebsite.logging.Event
	(*EventCategoryEnum)(nil),                      // 9: personalwebsite.logging.EventCategoryEnum
	(*Error)(nil),                                  // 10: personalwebsite.logging.Error
	(*OriginalError)(nil),                          // 11: personalwebsite.logging.OriginalError
	(*ErrorCategoryEnum)(nil),                      // 12: personalwebsite.logging.ErrorCategoryEnum
	(*app.AppInfo)(nil),                            // 13: personalwebsite.app.AppInfo
	(actions.ActionCategoryEnum_ActionCategory)(0), // 14: personalwebsite.actions.ActionCategoryEnum.ActionCategory
	(actions.OperationCategoryEnum_OperationCategory)(0), // 15: personalwebsite.actions.OperationCategoryEnum.OperationCategory
}
var file_data_logging_log_entry_proto_depIdxs = []int32{
	13, // 0: personalwebsite.logging.LogEntry.app:type_name -> personalwebsite.app.AppInfo
	4,  // 1: personalwebsite.logging.LogEntry.agent:type_name -> personalwebsite.logging.Agent
	5,  // 2: personalwebsite.logging.LogEntry.tran:type_name -> personalwebsite.logging.Transaction
	6,  // 3: personalwebsite.logging.LogEntry.action:type_name -> personalwebsite.logging.Action
	7,  // 4: personalwebsite.logging.LogEntry.operation:type_name -> personalwebsite.logging.Operation
	0,  // 5: personalwebsite.logging.LogEntry.level:type_name -> personalwebsite.logging.LogLevel
	8,  // 6: personalwebsite.logging.LogEntry.event:type_name -> personalwebsite.logging.Event
	10, // 7: personalwebsite.logging.LogEntry.error:type_name -> personalwebsite.logging.Error
	14, // 8: personalwebsite.logging.Action.category:type_name -> personalwebsite.actions.ActionCategoryEnum.ActionCategory
	15, // 9: personalwebsite.logging.Operation.category:type_name -> personalwebsite.actions.OperationCategoryEnum.OperationCategory
	1,  // 10: personalwebsite.logging.Event.category:type_name -> personalwebsite.logging.EventCategoryEnum.EventCategory
	2,  // 11: personalwebsite.logging.Error.category:type_name -> personalwebsite.logging.ErrorCategoryEnum.ErrorCategory
	11, // 12: personalwebsite.logging.Error.original_error:type_name -> personalwebsite.logging.OriginalError
	2,  // 13: personalwebsite.logging.OriginalError.category:type_name -> personalwebsite.logging.ErrorCategoryEnum.ErrorCategory
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_data_logging_log_entry_proto_init() }
func file_data_logging_log_entry_proto_init() {
	if File_data_logging_log_entry_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_data_logging_log_entry_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_logging_log_entry_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Agent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_logging_log_entry_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_logging_log_entry_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_logging_log_entry_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_logging_log_entry_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_logging_log_entry_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventCategoryEnum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_logging_log_entry_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_logging_log_entry_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OriginalError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_logging_log_entry_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorCategoryEnum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_data_logging_log_entry_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_data_logging_log_entry_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_data_logging_log_entry_proto_goTypes,
		DependencyIndexes: file_data_logging_log_entry_proto_depIdxs,
		EnumInfos:         file_data_logging_log_entry_proto_enumTypes,
		MessageInfos:      file_data_logging_log_entry_proto_msgTypes,
	}.Build()
	File_data_logging_log_entry_proto = out.File
	file_data_logging_log_entry_proto_rawDesc = nil
	file_data_logging_log_entry_proto_goTypes = nil
	file_data_logging_log_entry_proto_depIdxs = nil
}
