// Copyright 2023 Alexey Lavrenchenko. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.3
// source: apis/identity/roles/assignments/role_assignment_service.proto

package assignments

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for 'RoleAssignmentService.Create'.
type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The role ID.
	RoleId uint64 `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// The unique ID of the entity the role is assigned to - either the userId of a user
	// or the groupId of a group.
	AssignedTo uint64 `protobuf:"varint,2,opt,name=assigned_to,json=assignedTo,proto3" json:"assigned_to,omitempty"`
	// The type of the assignee.
	AssigneeType AssigneeTypeEnum_AssigneeType `protobuf:"varint,3,opt,name=assignee_type,json=assigneeType,proto3,enum=personalwebsite.identity.roles.assignments.AssigneeTypeEnum_AssigneeType" json:"assignee_type,omitempty"`
	// Optional. The role assignment description.
	Description *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_assignments_role_assignment_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRequest) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *CreateRequest) GetAssignedTo() uint64 {
	if x != nil {
		return x.AssignedTo
	}
	return 0
}

func (x *CreateRequest) GetAssigneeType() AssigneeTypeEnum_AssigneeType {
	if x != nil {
		return x.AssigneeType
	}
	return AssigneeTypeEnum_UNSPECIFIED
}

func (x *CreateRequest) GetDescription() *wrapperspb.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

// Response message for 'RoleAssignmentService.Create'.
type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The role assignment ID.
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_assignments_role_assignment_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Request message for 'RoleAssignmentService.Delete'.
type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The role assignment ID.
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_assignments_role_assignment_service_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Request message for 'RoleAssignmentService.GetById'.
type GetByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The role assignment ID.
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetByIdRequest) Reset() {
	*x = GetByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByIdRequest) ProtoMessage() {}

func (x *GetByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByIdRequest.ProtoReflect.Descriptor instead.
func (*GetByIdRequest) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_assignments_role_assignment_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetByIdRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response message for 'RoleAssignmentService.GetById'.
type GetByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The role assignment.
	Assignment *RoleAssignment `protobuf:"bytes,1,opt,name=assignment,proto3" json:"assignment,omitempty"`
}

func (x *GetByIdResponse) Reset() {
	*x = GetByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByIdResponse) ProtoMessage() {}

func (x *GetByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByIdResponse.ProtoReflect.Descriptor instead.
func (*GetByIdResponse) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_assignments_role_assignment_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetByIdResponse) GetAssignment() *RoleAssignment {
	if x != nil {
		return x.Assignment
	}
	return nil
}

// Request message for 'RoleAssignmentService.GetByRoleIdAndAssignee'.
type GetByRoleIdAndAssigneeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The role ID.
	RoleId uint64 `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// The assignee ID.
	AssigneeId uint64 `protobuf:"varint,2,opt,name=assignee_id,json=assigneeId,proto3" json:"assignee_id,omitempty"`
	// The assignee type.
	AssigneeType AssigneeTypeEnum_AssigneeType `protobuf:"varint,3,opt,name=assignee_type,json=assigneeType,proto3,enum=personalwebsite.identity.roles.assignments.AssigneeTypeEnum_AssigneeType" json:"assignee_type,omitempty"`
}

func (x *GetByRoleIdAndAssigneeRequest) Reset() {
	*x = GetByRoleIdAndAssigneeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByRoleIdAndAssigneeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByRoleIdAndAssigneeRequest) ProtoMessage() {}

func (x *GetByRoleIdAndAssigneeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByRoleIdAndAssigneeRequest.ProtoReflect.Descriptor instead.
func (*GetByRoleIdAndAssigneeRequest) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_assignments_role_assignment_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetByRoleIdAndAssigneeRequest) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *GetByRoleIdAndAssigneeRequest) GetAssigneeId() uint64 {
	if x != nil {
		return x.AssigneeId
	}
	return 0
}

func (x *GetByRoleIdAndAssigneeRequest) GetAssigneeType() AssigneeTypeEnum_AssigneeType {
	if x != nil {
		return x.AssigneeType
	}
	return AssigneeTypeEnum_UNSPECIFIED
}

// Response message for 'RoleAssignmentService.GetByRoleIdAndAssignee'.
type GetByRoleIdAndAssigneeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The role assignment.
	Assignment *RoleAssignment `protobuf:"bytes,1,opt,name=assignment,proto3" json:"assignment,omitempty"`
}

func (x *GetByRoleIdAndAssigneeResponse) Reset() {
	*x = GetByRoleIdAndAssigneeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByRoleIdAndAssigneeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByRoleIdAndAssigneeResponse) ProtoMessage() {}

func (x *GetByRoleIdAndAssigneeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByRoleIdAndAssigneeResponse.ProtoReflect.Descriptor instead.
func (*GetByRoleIdAndAssigneeResponse) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_assignments_role_assignment_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetByRoleIdAndAssigneeResponse) GetAssignment() *RoleAssignment {
	if x != nil {
		return x.Assignment
	}
	return nil
}

// Request message for 'RoleAssignmentService.Exists'.
type ExistsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The role ID.
	RoleId uint64 `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// The assignee ID.
	AssigneeId uint64 `protobuf:"varint,2,opt,name=assignee_id,json=assigneeId,proto3" json:"assignee_id,omitempty"`
	// The assignee type.
	AssigneeType AssigneeTypeEnum_AssigneeType `protobuf:"varint,3,opt,name=assignee_type,json=assigneeType,proto3,enum=personalwebsite.identity.roles.assignments.AssigneeTypeEnum_AssigneeType" json:"assignee_type,omitempty"`
}

func (x *ExistsRequest) Reset() {
	*x = ExistsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistsRequest) ProtoMessage() {}

func (x *ExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistsRequest.ProtoReflect.Descriptor instead.
func (*ExistsRequest) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_assignments_role_assignment_service_proto_rawDescGZIP(), []int{7}
}

func (x *ExistsRequest) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *ExistsRequest) GetAssigneeId() uint64 {
	if x != nil {
		return x.AssigneeId
	}
	return 0
}

func (x *ExistsRequest) GetAssigneeType() AssigneeTypeEnum_AssigneeType {
	if x != nil {
		return x.AssigneeType
	}
	return AssigneeTypeEnum_UNSPECIFIED
}

// Response message for 'RoleAssignmentService.Exists'.
type ExistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The role assignment exists.
	Exists bool `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *ExistsResponse) Reset() {
	*x = ExistsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistsResponse) ProtoMessage() {}

func (x *ExistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistsResponse.ProtoReflect.Descriptor instead.
func (*ExistsResponse) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_assignments_role_assignment_service_proto_rawDescGZIP(), []int{8}
}

func (x *ExistsResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

// Request message for 'RoleAssignmentService.IsAssigned'.
type IsAssignedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The role ID.
	RoleId uint64 `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// The assignee ID.
	AssigneeId uint64 `protobuf:"varint,2,opt,name=assignee_id,json=assigneeId,proto3" json:"assignee_id,omitempty"`
	// The assignee type.
	AssigneeType AssigneeTypeEnum_AssigneeType `protobuf:"varint,3,opt,name=assignee_type,json=assigneeType,proto3,enum=personalwebsite.identity.roles.assignments.AssigneeTypeEnum_AssigneeType" json:"assignee_type,omitempty"`
}

func (x *IsAssignedRequest) Reset() {
	*x = IsAssignedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAssignedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAssignedRequest) ProtoMessage() {}

func (x *IsAssignedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAssignedRequest.ProtoReflect.Descriptor instead.
func (*IsAssignedRequest) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_assignments_role_assignment_service_proto_rawDescGZIP(), []int{9}
}

func (x *IsAssignedRequest) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *IsAssignedRequest) GetAssigneeId() uint64 {
	if x != nil {
		return x.AssigneeId
	}
	return 0
}

func (x *IsAssignedRequest) GetAssigneeType() AssigneeTypeEnum_AssigneeType {
	if x != nil {
		return x.AssigneeType
	}
	return AssigneeTypeEnum_UNSPECIFIED
}

// Response message for 'RoleAssignmentService.IsAssigned'.
type IsAssignedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAssigned bool `protobuf:"varint,1,opt,name=is_assigned,json=isAssigned,proto3" json:"is_assigned,omitempty"`
}

func (x *IsAssignedResponse) Reset() {
	*x = IsAssignedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAssignedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAssignedResponse) ProtoMessage() {}

func (x *IsAssignedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAssignedResponse.ProtoReflect.Descriptor instead.
func (*IsAssignedResponse) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_assignments_role_assignment_service_proto_rawDescGZIP(), []int{10}
}

func (x *IsAssignedResponse) GetIsAssigned() bool {
	if x != nil {
		return x.IsAssigned
	}
	return false
}

// Request message for 'RoleAssignmentService.GetAssigneeTypeById'.
type GetAssigneeTypeByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The role assignment ID.
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAssigneeTypeByIdRequest) Reset() {
	*x = GetAssigneeTypeByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssigneeTypeByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssigneeTypeByIdRequest) ProtoMessage() {}

func (x *GetAssigneeTypeByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssigneeTypeByIdRequest.ProtoReflect.Descriptor instead.
func (*GetAssigneeTypeByIdRequest) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_assignments_role_assignment_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetAssigneeTypeByIdRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response message for 'RoleAssignmentService.GetAssigneeTypeById'.
type GetAssigneeTypeByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the assignee.
	AssigneeType AssigneeTypeEnum_AssigneeType `protobuf:"varint,1,opt,name=assignee_type,json=assigneeType,proto3,enum=personalwebsite.identity.roles.assignments.AssigneeTypeEnum_AssigneeType" json:"assignee_type,omitempty"`
}

func (x *GetAssigneeTypeByIdResponse) Reset() {
	*x = GetAssigneeTypeByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssigneeTypeByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssigneeTypeByIdResponse) ProtoMessage() {}

func (x *GetAssigneeTypeByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssigneeTypeByIdResponse.ProtoReflect.Descriptor instead.
func (*GetAssigneeTypeByIdResponse) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_assignments_role_assignment_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetAssigneeTypeByIdResponse) GetAssigneeType() AssigneeTypeEnum_AssigneeType {
	if x != nil {
		return x.AssigneeType
	}
	return AssigneeTypeEnum_UNSPECIFIED
}

// Request message for 'RoleAssignmentService.GetStatusById'.
type GetStatusByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The role assignment ID.
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetStatusByIdRequest) Reset() {
	*x = GetStatusByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusByIdRequest) ProtoMessage() {}

func (x *GetStatusByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusByIdRequest.ProtoReflect.Descriptor instead.
func (*GetStatusByIdRequest) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_assignments_role_assignment_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetStatusByIdRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response message for 'RoleAssignmentService.GetStatusById'.
type GetStatusByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The role assignment status.
	Status RoleAssignmentStatusEnum_RoleAssignmentStatus `protobuf:"varint,1,opt,name=status,proto3,enum=personalwebsite.identity.roles.assignments.RoleAssignmentStatusEnum_RoleAssignmentStatus" json:"status,omitempty"`
}

func (x *GetStatusByIdResponse) Reset() {
	*x = GetStatusByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusByIdResponse) ProtoMessage() {}

func (x *GetStatusByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusByIdResponse.ProtoReflect.Descriptor instead.
func (*GetStatusByIdResponse) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_assignments_role_assignment_service_proto_rawDescGZIP(), []int{14}
}

func (x *GetStatusByIdResponse) GetStatus() RoleAssignmentStatusEnum_RoleAssignmentStatus {
	if x != nil {
		return x.Status
	}
	return RoleAssignmentStatusEnum_UNSPECIFIED
}

// Request message for 'RoleAssignmentService.GetRoleIdAndAssigneeById'.
type GetRoleIdAndAssigneeByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The role assignment ID.
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetRoleIdAndAssigneeByIdRequest) Reset() {
	*x = GetRoleIdAndAssigneeByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleIdAndAssigneeByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleIdAndAssigneeByIdRequest) ProtoMessage() {}

func (x *GetRoleIdAndAssigneeByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleIdAndAssigneeByIdRequest.ProtoReflect.Descriptor instead.
func (*GetRoleIdAndAssigneeByIdRequest) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_assignments_role_assignment_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetRoleIdAndAssigneeByIdRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response message for 'RoleAssignmentService.GetRoleIdAndAssigneeById'.
type GetRoleIdAndAssigneeByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The role ID.
	RoleId uint64 `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// The assignee ID.
	AssigneeId uint64 `protobuf:"varint,2,opt,name=assignee_id,json=assigneeId,proto3" json:"assignee_id,omitempty"`
	// The assignee type.
	AssigneeType AssigneeTypeEnum_AssigneeType `protobuf:"varint,3,opt,name=assignee_type,json=assigneeType,proto3,enum=personalwebsite.identity.roles.assignments.AssigneeTypeEnum_AssigneeType" json:"assignee_type,omitempty"`
}

func (x *GetRoleIdAndAssigneeByIdResponse) Reset() {
	*x = GetRoleIdAndAssigneeByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleIdAndAssigneeByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleIdAndAssigneeByIdResponse) ProtoMessage() {}

func (x *GetRoleIdAndAssigneeByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleIdAndAssigneeByIdResponse.ProtoReflect.Descriptor instead.
func (*GetRoleIdAndAssigneeByIdResponse) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_assignments_role_assignment_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetRoleIdAndAssigneeByIdResponse) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *GetRoleIdAndAssigneeByIdResponse) GetAssigneeId() uint64 {
	if x != nil {
		return x.AssigneeId
	}
	return 0
}

func (x *GetRoleIdAndAssigneeByIdResponse) GetAssigneeType() AssigneeTypeEnum_AssigneeType {
	if x != nil {
		return x.AssigneeType
	}
	return AssigneeTypeEnum_UNSPECIFIED
}

var File_apis_identity_roles_assignments_role_assignment_service_proto protoreflect.FileDescriptor

var file_apis_identity_roles_assignments_role_assignment_service_proto_rawDesc = []byte{
	0x0a, 0x3d, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x2a, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x35, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2f, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xf9, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x6f, 0x12, 0x6e, 0x0a, 0x0d, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x49, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62,
	0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d,
	0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x20, 0x0a, 0x0e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1f, 0x0a,
	0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x20,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x6d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22,
	0xc9, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x41,
	0x6e, 0x64, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x49, 0x64, 0x12, 0x6e, 0x0a, 0x0d, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x49, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62,
	0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d,
	0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x7c, 0x0a, 0x1e, 0x47,
	0x65, 0x74, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a,
	0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3a, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73,
	0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f, 0x6c,
	0x65, 0x73, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xb9, 0x01, 0x0a, 0x0d, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x65, 0x49, 0x64, 0x12, 0x6e, 0x0a, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49, 0x2e, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x28, 0x0a, 0x0e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x22,
	0xbd, 0x01, 0x0a, 0x11, 0x49, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x49, 0x64, 0x12,
	0x6e, 0x0a, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x35, 0x0a, 0x12, 0x49, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x22, 0x2c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49, 0x2e, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x26, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x8a, 0x01, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x59, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x31, 0x0a, 0x1f, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0xcc, 0x01, 0x0a,
	0x20, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x49, 0x64, 0x12, 0x6e, 0x0a, 0x0d, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x49, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62,
	0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d,
	0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x32, 0xc7, 0x0a, 0x0a, 0x15,
	0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x39, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69,
	0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x06, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x39, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65,
	0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x42, 0x79, 0x49, 0x64, 0x12, 0x3a, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77,
	0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3b, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69,
	0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0xb1, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x41,
	0x6e, 0x64, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x12, 0x49, 0x2e, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x52, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4a, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x41, 0x6e,
	0x64, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x81, 0x01, 0x0a, 0x06, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x39,
	0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8d, 0x01, 0x0a, 0x0a, 0x49, 0x73, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x3d, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x49, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x49, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa8, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12,
	0x46, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74,
	0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73,
	0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x47, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x96, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x42, 0x79, 0x49, 0x64, 0x12, 0x40, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77,
	0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xb7, 0x01, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x4b, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x41,
	0x6e, 0x64, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4c, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x44, 0x5a, 0x42, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x2d, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2d, 0x76, 0x32, 0x2f, 0x67, 0x6f, 0x2d,
	0x61, 0x70, 0x69, 0x73, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x2f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x3b,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_apis_identity_roles_assignments_role_assignment_service_proto_rawDescOnce sync.Once
	file_apis_identity_roles_assignments_role_assignment_service_proto_rawDescData = file_apis_identity_roles_assignments_role_assignment_service_proto_rawDesc
)

func file_apis_identity_roles_assignments_role_assignment_service_proto_rawDescGZIP() []byte {
	file_apis_identity_roles_assignments_role_assignment_service_proto_rawDescOnce.Do(func() {
		file_apis_identity_roles_assignments_role_assignment_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_apis_identity_roles_assignments_role_assignment_service_proto_rawDescData)
	})
	return file_apis_identity_roles_assignments_role_assignment_service_proto_rawDescData
}

var file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_apis_identity_roles_assignments_role_assignment_service_proto_goTypes = []interface{}{
	(*CreateRequest)(nil),                              // 0: personalwebsite.identity.roles.assignments.CreateRequest
	(*CreateResponse)(nil),                             // 1: personalwebsite.identity.roles.assignments.CreateResponse
	(*DeleteRequest)(nil),                              // 2: personalwebsite.identity.roles.assignments.DeleteRequest
	(*GetByIdRequest)(nil),                             // 3: personalwebsite.identity.roles.assignments.GetByIdRequest
	(*GetByIdResponse)(nil),                            // 4: personalwebsite.identity.roles.assignments.GetByIdResponse
	(*GetByRoleIdAndAssigneeRequest)(nil),              // 5: personalwebsite.identity.roles.assignments.GetByRoleIdAndAssigneeRequest
	(*GetByRoleIdAndAssigneeResponse)(nil),             // 6: personalwebsite.identity.roles.assignments.GetByRoleIdAndAssigneeResponse
	(*ExistsRequest)(nil),                              // 7: personalwebsite.identity.roles.assignments.ExistsRequest
	(*ExistsResponse)(nil),                             // 8: personalwebsite.identity.roles.assignments.ExistsResponse
	(*IsAssignedRequest)(nil),                          // 9: personalwebsite.identity.roles.assignments.IsAssignedRequest
	(*IsAssignedResponse)(nil),                         // 10: personalwebsite.identity.roles.assignments.IsAssignedResponse
	(*GetAssigneeTypeByIdRequest)(nil),                 // 11: personalwebsite.identity.roles.assignments.GetAssigneeTypeByIdRequest
	(*GetAssigneeTypeByIdResponse)(nil),                // 12: personalwebsite.identity.roles.assignments.GetAssigneeTypeByIdResponse
	(*GetStatusByIdRequest)(nil),                       // 13: personalwebsite.identity.roles.assignments.GetStatusByIdRequest
	(*GetStatusByIdResponse)(nil),                      // 14: personalwebsite.identity.roles.assignments.GetStatusByIdResponse
	(*GetRoleIdAndAssigneeByIdRequest)(nil),            // 15: personalwebsite.identity.roles.assignments.GetRoleIdAndAssigneeByIdRequest
	(*GetRoleIdAndAssigneeByIdResponse)(nil),           // 16: personalwebsite.identity.roles.assignments.GetRoleIdAndAssigneeByIdResponse
	(AssigneeTypeEnum_AssigneeType)(0),                 // 17: personalwebsite.identity.roles.assignments.AssigneeTypeEnum.AssigneeType
	(*wrapperspb.StringValue)(nil),                     // 18: google.protobuf.StringValue
	(*RoleAssignment)(nil),                             // 19: personalwebsite.identity.roles.assignments.RoleAssignment
	(RoleAssignmentStatusEnum_RoleAssignmentStatus)(0), // 20: personalwebsite.identity.roles.assignments.RoleAssignmentStatusEnum.RoleAssignmentStatus
	(*emptypb.Empty)(nil),                              // 21: google.protobuf.Empty
}
var file_apis_identity_roles_assignments_role_assignment_service_proto_depIdxs = []int32{
	17, // 0: personalwebsite.identity.roles.assignments.CreateRequest.assignee_type:type_name -> personalwebsite.identity.roles.assignments.AssigneeTypeEnum.AssigneeType
	18, // 1: personalwebsite.identity.roles.assignments.CreateRequest.description:type_name -> google.protobuf.StringValue
	19, // 2: personalwebsite.identity.roles.assignments.GetByIdResponse.assignment:type_name -> personalwebsite.identity.roles.assignments.RoleAssignment
	17, // 3: personalwebsite.identity.roles.assignments.GetByRoleIdAndAssigneeRequest.assignee_type:type_name -> personalwebsite.identity.roles.assignments.AssigneeTypeEnum.AssigneeType
	19, // 4: personalwebsite.identity.roles.assignments.GetByRoleIdAndAssigneeResponse.assignment:type_name -> personalwebsite.identity.roles.assignments.RoleAssignment
	17, // 5: personalwebsite.identity.roles.assignments.ExistsRequest.assignee_type:type_name -> personalwebsite.identity.roles.assignments.AssigneeTypeEnum.AssigneeType
	17, // 6: personalwebsite.identity.roles.assignments.IsAssignedRequest.assignee_type:type_name -> personalwebsite.identity.roles.assignments.AssigneeTypeEnum.AssigneeType
	17, // 7: personalwebsite.identity.roles.assignments.GetAssigneeTypeByIdResponse.assignee_type:type_name -> personalwebsite.identity.roles.assignments.AssigneeTypeEnum.AssigneeType
	20, // 8: personalwebsite.identity.roles.assignments.GetStatusByIdResponse.status:type_name -> personalwebsite.identity.roles.assignments.RoleAssignmentStatusEnum.RoleAssignmentStatus
	17, // 9: personalwebsite.identity.roles.assignments.GetRoleIdAndAssigneeByIdResponse.assignee_type:type_name -> personalwebsite.identity.roles.assignments.AssigneeTypeEnum.AssigneeType
	0,  // 10: personalwebsite.identity.roles.assignments.RoleAssignmentService.Create:input_type -> personalwebsite.identity.roles.assignments.CreateRequest
	2,  // 11: personalwebsite.identity.roles.assignments.RoleAssignmentService.Delete:input_type -> personalwebsite.identity.roles.assignments.DeleteRequest
	3,  // 12: personalwebsite.identity.roles.assignments.RoleAssignmentService.GetById:input_type -> personalwebsite.identity.roles.assignments.GetByIdRequest
	5,  // 13: personalwebsite.identity.roles.assignments.RoleAssignmentService.GetByRoleIdAndAssignee:input_type -> personalwebsite.identity.roles.assignments.GetByRoleIdAndAssigneeRequest
	7,  // 14: personalwebsite.identity.roles.assignments.RoleAssignmentService.Exists:input_type -> personalwebsite.identity.roles.assignments.ExistsRequest
	9,  // 15: personalwebsite.identity.roles.assignments.RoleAssignmentService.IsAssigned:input_type -> personalwebsite.identity.roles.assignments.IsAssignedRequest
	11, // 16: personalwebsite.identity.roles.assignments.RoleAssignmentService.GetAssigneeTypeById:input_type -> personalwebsite.identity.roles.assignments.GetAssigneeTypeByIdRequest
	13, // 17: personalwebsite.identity.roles.assignments.RoleAssignmentService.GetStatusById:input_type -> personalwebsite.identity.roles.assignments.GetStatusByIdRequest
	15, // 18: personalwebsite.identity.roles.assignments.RoleAssignmentService.GetRoleIdAndAssigneeById:input_type -> personalwebsite.identity.roles.assignments.GetRoleIdAndAssigneeByIdRequest
	1,  // 19: personalwebsite.identity.roles.assignments.RoleAssignmentService.Create:output_type -> personalwebsite.identity.roles.assignments.CreateResponse
	21, // 20: personalwebsite.identity.roles.assignments.RoleAssignmentService.Delete:output_type -> google.protobuf.Empty
	4,  // 21: personalwebsite.identity.roles.assignments.RoleAssignmentService.GetById:output_type -> personalwebsite.identity.roles.assignments.GetByIdResponse
	6,  // 22: personalwebsite.identity.roles.assignments.RoleAssignmentService.GetByRoleIdAndAssignee:output_type -> personalwebsite.identity.roles.assignments.GetByRoleIdAndAssigneeResponse
	8,  // 23: personalwebsite.identity.roles.assignments.RoleAssignmentService.Exists:output_type -> personalwebsite.identity.roles.assignments.ExistsResponse
	10, // 24: personalwebsite.identity.roles.assignments.RoleAssignmentService.IsAssigned:output_type -> personalwebsite.identity.roles.assignments.IsAssignedResponse
	12, // 25: personalwebsite.identity.roles.assignments.RoleAssignmentService.GetAssigneeTypeById:output_type -> personalwebsite.identity.roles.assignments.GetAssigneeTypeByIdResponse
	14, // 26: personalwebsite.identity.roles.assignments.RoleAssignmentService.GetStatusById:output_type -> personalwebsite.identity.roles.assignments.GetStatusByIdResponse
	16, // 27: personalwebsite.identity.roles.assignments.RoleAssignmentService.GetRoleIdAndAssigneeById:output_type -> personalwebsite.identity.roles.assignments.GetRoleIdAndAssigneeByIdResponse
	19, // [19:28] is the sub-list for method output_type
	10, // [10:19] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_apis_identity_roles_assignments_role_assignment_service_proto_init() }
func file_apis_identity_roles_assignments_role_assignment_service_proto_init() {
	if File_apis_identity_roles_assignments_role_assignment_service_proto != nil {
		return
	}
	file_apis_identity_roles_assignments_role_assignment_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByRoleIdAndAssigneeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByRoleIdAndAssigneeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAssignedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAssignedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssigneeTypeByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssigneeTypeByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleIdAndAssigneeByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleIdAndAssigneeByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apis_identity_roles_assignments_role_assignment_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apis_identity_roles_assignments_role_assignment_service_proto_goTypes,
		DependencyIndexes: file_apis_identity_roles_assignments_role_assignment_service_proto_depIdxs,
		MessageInfos:      file_apis_identity_roles_assignments_role_assignment_service_proto_msgTypes,
	}.Build()
	File_apis_identity_roles_assignments_role_assignment_service_proto = out.File
	file_apis_identity_roles_assignments_role_assignment_service_proto_rawDesc = nil
	file_apis_identity_roles_assignments_role_assignment_service_proto_goTypes = nil
	file_apis_identity_roles_assignments_role_assignment_service_proto_depIdxs = nil
}
