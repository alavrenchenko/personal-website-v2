// Copyright 2023 Alexey Lavrenchenko. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.3
// source: apis/identity/roles/userroleassignments/user_role_assignment_service.proto

package userroleassignments

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for 'UserRoleAssignmentService.GetById'.
type GetByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user's role assignment ID.
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetByIdRequest) Reset() {
	*x = GetByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByIdRequest) ProtoMessage() {}

func (x *GetByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByIdRequest.ProtoReflect.Descriptor instead.
func (*GetByIdRequest) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetByIdRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response message for 'UserRoleAssignmentService.GetById'.
type GetByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user's role assignment.
	Assignment *UserRoleAssignment `protobuf:"bytes,1,opt,name=assignment,proto3" json:"assignment,omitempty"`
}

func (x *GetByIdResponse) Reset() {
	*x = GetByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByIdResponse) ProtoMessage() {}

func (x *GetByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByIdResponse.ProtoReflect.Descriptor instead.
func (*GetByIdResponse) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetByIdResponse) GetAssignment() *UserRoleAssignment {
	if x != nil {
		return x.Assignment
	}
	return nil
}

// Request message for 'UserRoleAssignmentService.GetByRoleAssignmentId'.
type GetByRoleAssignmentIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The role assignment ID.
	RoleAssignmentId uint64 `protobuf:"varint,1,opt,name=role_assignment_id,json=roleAssignmentId,proto3" json:"role_assignment_id,omitempty"`
}

func (x *GetByRoleAssignmentIdRequest) Reset() {
	*x = GetByRoleAssignmentIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByRoleAssignmentIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByRoleAssignmentIdRequest) ProtoMessage() {}

func (x *GetByRoleAssignmentIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByRoleAssignmentIdRequest.ProtoReflect.Descriptor instead.
func (*GetByRoleAssignmentIdRequest) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetByRoleAssignmentIdRequest) GetRoleAssignmentId() uint64 {
	if x != nil {
		return x.RoleAssignmentId
	}
	return 0
}

// Response message for 'UserRoleAssignmentService.GetByRoleAssignmentId'.
type GetByRoleAssignmentIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user's role assignment.
	Assignment *UserRoleAssignment `protobuf:"bytes,1,opt,name=assignment,proto3" json:"assignment,omitempty"`
}

func (x *GetByRoleAssignmentIdResponse) Reset() {
	*x = GetByRoleAssignmentIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByRoleAssignmentIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByRoleAssignmentIdResponse) ProtoMessage() {}

func (x *GetByRoleAssignmentIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByRoleAssignmentIdResponse.ProtoReflect.Descriptor instead.
func (*GetByRoleAssignmentIdResponse) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetByRoleAssignmentIdResponse) GetAssignment() *UserRoleAssignment {
	if x != nil {
		return x.Assignment
	}
	return nil
}

// Request message for 'UserRoleAssignmentService.GetAllByUserId'.
type GetAllByUserIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user ID.
	UserId uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetAllByUserIdRequest) Reset() {
	*x = GetAllByUserIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllByUserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllByUserIdRequest) ProtoMessage() {}

func (x *GetAllByUserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllByUserIdRequest.ProtoReflect.Descriptor instead.
func (*GetAllByUserIdRequest) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetAllByUserIdRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Response message for 'UserRoleAssignmentService.GetAllByUserId'.
type GetAllByUserIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user's role assignments.
	Assignments []*UserRoleAssignment `protobuf:"bytes,1,rep,name=assignments,proto3" json:"assignments,omitempty"`
}

func (x *GetAllByUserIdResponse) Reset() {
	*x = GetAllByUserIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllByUserIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllByUserIdResponse) ProtoMessage() {}

func (x *GetAllByUserIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllByUserIdResponse.ProtoReflect.Descriptor instead.
func (*GetAllByUserIdResponse) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetAllByUserIdResponse) GetAssignments() []*UserRoleAssignment {
	if x != nil {
		return x.Assignments
	}
	return nil
}

// Request message for 'UserRoleAssignmentService.Exists'.
type ExistsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user ID.
	UserId uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The role ID.
	RoleId uint64 `protobuf:"varint,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *ExistsRequest) Reset() {
	*x = ExistsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistsRequest) ProtoMessage() {}

func (x *ExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistsRequest.ProtoReflect.Descriptor instead.
func (*ExistsRequest) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_rawDescGZIP(), []int{6}
}

func (x *ExistsRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ExistsRequest) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

// Response message for 'UserRoleAssignmentService.Exists'.
type ExistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user's role assignment exists.
	Exists bool `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *ExistsResponse) Reset() {
	*x = ExistsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistsResponse) ProtoMessage() {}

func (x *ExistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistsResponse.ProtoReflect.Descriptor instead.
func (*ExistsResponse) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_rawDescGZIP(), []int{7}
}

func (x *ExistsResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

// Request message for 'UserRoleAssignmentService.IsAssigned'.
type IsAssignedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user ID.
	UserId uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The role ID.
	RoleId uint64 `protobuf:"varint,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *IsAssignedRequest) Reset() {
	*x = IsAssignedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAssignedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAssignedRequest) ProtoMessage() {}

func (x *IsAssignedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAssignedRequest.ProtoReflect.Descriptor instead.
func (*IsAssignedRequest) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_rawDescGZIP(), []int{8}
}

func (x *IsAssignedRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *IsAssignedRequest) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

// Response message for 'UserRoleAssignmentService.IsAssigned'.
type IsAssignedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAssigned bool `protobuf:"varint,1,opt,name=is_assigned,json=isAssigned,proto3" json:"is_assigned,omitempty"`
}

func (x *IsAssignedResponse) Reset() {
	*x = IsAssignedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAssignedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAssignedResponse) ProtoMessage() {}

func (x *IsAssignedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAssignedResponse.ProtoReflect.Descriptor instead.
func (*IsAssignedResponse) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_rawDescGZIP(), []int{9}
}

func (x *IsAssignedResponse) GetIsAssigned() bool {
	if x != nil {
		return x.IsAssigned
	}
	return false
}

// Request message for 'UserRoleAssignmentService.GetIdByRoleAssignmentId'.
type GetIdByRoleAssignmentIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The role assignment ID.
	RoleAssignmentId uint64 `protobuf:"varint,1,opt,name=role_assignment_id,json=roleAssignmentId,proto3" json:"role_assignment_id,omitempty"`
}

func (x *GetIdByRoleAssignmentIdRequest) Reset() {
	*x = GetIdByRoleAssignmentIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdByRoleAssignmentIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdByRoleAssignmentIdRequest) ProtoMessage() {}

func (x *GetIdByRoleAssignmentIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdByRoleAssignmentIdRequest.ProtoReflect.Descriptor instead.
func (*GetIdByRoleAssignmentIdRequest) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetIdByRoleAssignmentIdRequest) GetRoleAssignmentId() uint64 {
	if x != nil {
		return x.RoleAssignmentId
	}
	return 0
}

// Response message for 'UserRoleAssignmentService.GetIdByRoleAssignmentId'.
type GetIdByRoleAssignmentIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user's role assignment ID.
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetIdByRoleAssignmentIdResponse) Reset() {
	*x = GetIdByRoleAssignmentIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdByRoleAssignmentIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdByRoleAssignmentIdResponse) ProtoMessage() {}

func (x *GetIdByRoleAssignmentIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdByRoleAssignmentIdResponse.ProtoReflect.Descriptor instead.
func (*GetIdByRoleAssignmentIdResponse) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetIdByRoleAssignmentIdResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Request message for 'UserRoleAssignmentService.GetStatusById'.
type GetStatusByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user's role assignment ID.
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetStatusByIdRequest) Reset() {
	*x = GetStatusByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusByIdRequest) ProtoMessage() {}

func (x *GetStatusByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusByIdRequest.ProtoReflect.Descriptor instead.
func (*GetStatusByIdRequest) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetStatusByIdRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response message for 'UserRoleAssignmentService.GetStatusById'.
type GetStatusByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user's role assignment status.
	Status UserRoleAssignmentStatusEnum_UserRoleAssignmentStatus `protobuf:"varint,1,opt,name=status,proto3,enum=personalwebsite.identity.roles.userroleassignments.UserRoleAssignmentStatusEnum_UserRoleAssignmentStatus" json:"status,omitempty"`
}

func (x *GetStatusByIdResponse) Reset() {
	*x = GetStatusByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusByIdResponse) ProtoMessage() {}

func (x *GetStatusByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusByIdResponse.ProtoReflect.Descriptor instead.
func (*GetStatusByIdResponse) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetStatusByIdResponse) GetStatus() UserRoleAssignmentStatusEnum_UserRoleAssignmentStatus {
	if x != nil {
		return x.Status
	}
	return UserRoleAssignmentStatusEnum_UNSPECIFIED
}

// Request message for 'UserRoleAssignmentService.GetStatusByRoleAssignmentId'.
type GetStatusByRoleAssignmentIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The role assignment ID.
	RoleAssignmentId uint64 `protobuf:"varint,1,opt,name=role_assignment_id,json=roleAssignmentId,proto3" json:"role_assignment_id,omitempty"`
}

func (x *GetStatusByRoleAssignmentIdRequest) Reset() {
	*x = GetStatusByRoleAssignmentIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusByRoleAssignmentIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusByRoleAssignmentIdRequest) ProtoMessage() {}

func (x *GetStatusByRoleAssignmentIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusByRoleAssignmentIdRequest.ProtoReflect.Descriptor instead.
func (*GetStatusByRoleAssignmentIdRequest) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_rawDescGZIP(), []int{14}
}

func (x *GetStatusByRoleAssignmentIdRequest) GetRoleAssignmentId() uint64 {
	if x != nil {
		return x.RoleAssignmentId
	}
	return 0
}

// Response message for 'UserRoleAssignmentService.GetStatusByRoleAssignmentId'.
type GetStatusByRoleAssignmentIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user's role assignment status.
	Status UserRoleAssignmentStatusEnum_UserRoleAssignmentStatus `protobuf:"varint,1,opt,name=status,proto3,enum=personalwebsite.identity.roles.userroleassignments.UserRoleAssignmentStatusEnum_UserRoleAssignmentStatus" json:"status,omitempty"`
}

func (x *GetStatusByRoleAssignmentIdResponse) Reset() {
	*x = GetStatusByRoleAssignmentIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusByRoleAssignmentIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusByRoleAssignmentIdResponse) ProtoMessage() {}

func (x *GetStatusByRoleAssignmentIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusByRoleAssignmentIdResponse.ProtoReflect.Descriptor instead.
func (*GetStatusByRoleAssignmentIdResponse) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetStatusByRoleAssignmentIdResponse) GetStatus() UserRoleAssignmentStatusEnum_UserRoleAssignmentStatus {
	if x != nil {
		return x.Status
	}
	return UserRoleAssignmentStatusEnum_UNSPECIFIED
}

// Request message for 'UserRoleAssignmentService.GetUserRoleIdsByUserId'.
type GetUserRoleIdsByUserIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user ID.
	UserId uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The role filter.
	RoleFilter []uint64 `protobuf:"varint,2,rep,packed,name=role_filter,json=roleFilter,proto3" json:"role_filter,omitempty"`
}

func (x *GetUserRoleIdsByUserIdRequest) Reset() {
	*x = GetUserRoleIdsByUserIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRoleIdsByUserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRoleIdsByUserIdRequest) ProtoMessage() {}

func (x *GetUserRoleIdsByUserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRoleIdsByUserIdRequest.ProtoReflect.Descriptor instead.
func (*GetUserRoleIdsByUserIdRequest) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetUserRoleIdsByUserIdRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserRoleIdsByUserIdRequest) GetRoleFilter() []uint64 {
	if x != nil {
		return x.RoleFilter
	}
	return nil
}

// Response message for 'UserRoleAssignmentService.GetUserRoleIdsByUserId'.
type GetUserRoleIdsByUserIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The role IDs.
	RoleIds []uint64 `protobuf:"varint,1,rep,packed,name=role_ids,json=roleIds,proto3" json:"role_ids,omitempty"`
}

func (x *GetUserRoleIdsByUserIdResponse) Reset() {
	*x = GetUserRoleIdsByUserIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRoleIdsByUserIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRoleIdsByUserIdResponse) ProtoMessage() {}

func (x *GetUserRoleIdsByUserIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRoleIdsByUserIdResponse.ProtoReflect.Descriptor instead.
func (*GetUserRoleIdsByUserIdResponse) Descriptor() ([]byte, []int) {
	return file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetUserRoleIdsByUserIdResponse) GetRoleIds() []uint64 {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

var File_apis_identity_roles_userroleassignments_user_role_assignment_service_proto protoreflect.FileDescriptor

var file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_rawDesc = []byte{
	0x0a, 0x4a, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x72, 0x6f, 0x6c, 0x65, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x32, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x72, 0x6f, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x1a, 0x42, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x72, 0x6f, 0x6c, 0x65, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x79, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x0a, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x72, 0x6f, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0x4c, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x72,
	0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x87, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x66, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x72, 0x6f, 0x6c, 0x65, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x30, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x72, 0x6f, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0x41, 0x0a, 0x0d, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x0e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x22, 0x45, 0x0a,
	0x11, 0x49, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x12, 0x49, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73,
	0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x69, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x22, 0x4e, 0x0a, 0x1e, 0x47,
	0x65, 0x74, 0x49, 0x64, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a,
	0x12, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x72, 0x6f, 0x6c, 0x65, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x1f, 0x47,
	0x65, 0x74, 0x49, 0x64, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x26,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x81, 0x01, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73,
	0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f, 0x6c,
	0x65, 0x73, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x72, 0x6f, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45,
	0x6e, 0x75, 0x6d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x52, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x72, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xa9, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x81, 0x01, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73,
	0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f, 0x6c,
	0x65, 0x73, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x72, 0x6f, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45,
	0x6e, 0x75, 0x6d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x59, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x04, 0x52, 0x0a, 0x72, 0x6f, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22,
	0x3b, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x04, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x32, 0xda, 0x0c, 0x0a,
	0x19, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x94, 0x01, 0x0a, 0x07, 0x47,
	0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x42, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x72, 0x6f, 0x6c, 0x65,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x43, 0x2e, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x72, 0x6f, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0xbe, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x50, 0x2e, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x72, 0x6f, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x51, 0x2e,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x72, 0x6f, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0xa9, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x42, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x49, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x72, 0x6f, 0x6c, 0x65, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x4a, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69,
	0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x72, 0x6f, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x42, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x91,
	0x01, 0x0a, 0x06, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x41, 0x2e, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x72,
	0x6f, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x72, 0x6f, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x9d, 0x01, 0x0a, 0x0a, 0x49, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x12, 0x45, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73,
	0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f, 0x6c,
	0x65, 0x73, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x72, 0x6f, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x49, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x46, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x72, 0x6f,
	0x6c, 0x65, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x49, 0x73,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0xc4, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x49, 0x64, 0x42, 0x79, 0x52, 0x6f,
	0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x52,
	0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x72, 0x6f, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x53, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62,
	0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x72, 0x6f, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x42, 0x79, 0x52,
	0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa6, 0x01, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x49, 0x64, 0x12, 0x48, 0x2e, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x72, 0x6f, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x49, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x72, 0x6f, 0x6c, 0x65, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0xd0, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x56, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62,
	0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x72, 0x6f, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x57, 0x2e, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x72, 0x6f, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xc1, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x51, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69,
	0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x72, 0x6f, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x52, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65,
	0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x72, 0x6f, 0x6c, 0x65, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x54, 0x5a, 0x52, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x2d, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2d, 0x76, 0x32,
	0x2f, 0x67, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x72, 0x6f, 0x6c, 0x65,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x3b, 0x75, 0x73, 0x65, 0x72,
	0x72, 0x6f, 0x6c, 0x65, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_rawDescOnce sync.Once
	file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_rawDescData = file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_rawDesc
)

func file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_rawDescGZIP() []byte {
	file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_rawDescOnce.Do(func() {
		file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_rawDescData)
	})
	return file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_rawDescData
}

var file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_goTypes = []interface{}{
	(*GetByIdRequest)(nil),                                     // 0: personalwebsite.identity.roles.userroleassignments.GetByIdRequest
	(*GetByIdResponse)(nil),                                    // 1: personalwebsite.identity.roles.userroleassignments.GetByIdResponse
	(*GetByRoleAssignmentIdRequest)(nil),                       // 2: personalwebsite.identity.roles.userroleassignments.GetByRoleAssignmentIdRequest
	(*GetByRoleAssignmentIdResponse)(nil),                      // 3: personalwebsite.identity.roles.userroleassignments.GetByRoleAssignmentIdResponse
	(*GetAllByUserIdRequest)(nil),                              // 4: personalwebsite.identity.roles.userroleassignments.GetAllByUserIdRequest
	(*GetAllByUserIdResponse)(nil),                             // 5: personalwebsite.identity.roles.userroleassignments.GetAllByUserIdResponse
	(*ExistsRequest)(nil),                                      // 6: personalwebsite.identity.roles.userroleassignments.ExistsRequest
	(*ExistsResponse)(nil),                                     // 7: personalwebsite.identity.roles.userroleassignments.ExistsResponse
	(*IsAssignedRequest)(nil),                                  // 8: personalwebsite.identity.roles.userroleassignments.IsAssignedRequest
	(*IsAssignedResponse)(nil),                                 // 9: personalwebsite.identity.roles.userroleassignments.IsAssignedResponse
	(*GetIdByRoleAssignmentIdRequest)(nil),                     // 10: personalwebsite.identity.roles.userroleassignments.GetIdByRoleAssignmentIdRequest
	(*GetIdByRoleAssignmentIdResponse)(nil),                    // 11: personalwebsite.identity.roles.userroleassignments.GetIdByRoleAssignmentIdResponse
	(*GetStatusByIdRequest)(nil),                               // 12: personalwebsite.identity.roles.userroleassignments.GetStatusByIdRequest
	(*GetStatusByIdResponse)(nil),                              // 13: personalwebsite.identity.roles.userroleassignments.GetStatusByIdResponse
	(*GetStatusByRoleAssignmentIdRequest)(nil),                 // 14: personalwebsite.identity.roles.userroleassignments.GetStatusByRoleAssignmentIdRequest
	(*GetStatusByRoleAssignmentIdResponse)(nil),                // 15: personalwebsite.identity.roles.userroleassignments.GetStatusByRoleAssignmentIdResponse
	(*GetUserRoleIdsByUserIdRequest)(nil),                      // 16: personalwebsite.identity.roles.userroleassignments.GetUserRoleIdsByUserIdRequest
	(*GetUserRoleIdsByUserIdResponse)(nil),                     // 17: personalwebsite.identity.roles.userroleassignments.GetUserRoleIdsByUserIdResponse
	(*UserRoleAssignment)(nil),                                 // 18: personalwebsite.identity.roles.userroleassignments.UserRoleAssignment
	(UserRoleAssignmentStatusEnum_UserRoleAssignmentStatus)(0), // 19: personalwebsite.identity.roles.userroleassignments.UserRoleAssignmentStatusEnum.UserRoleAssignmentStatus
}
var file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_depIdxs = []int32{
	18, // 0: personalwebsite.identity.roles.userroleassignments.GetByIdResponse.assignment:type_name -> personalwebsite.identity.roles.userroleassignments.UserRoleAssignment
	18, // 1: personalwebsite.identity.roles.userroleassignments.GetByRoleAssignmentIdResponse.assignment:type_name -> personalwebsite.identity.roles.userroleassignments.UserRoleAssignment
	18, // 2: personalwebsite.identity.roles.userroleassignments.GetAllByUserIdResponse.assignments:type_name -> personalwebsite.identity.roles.userroleassignments.UserRoleAssignment
	19, // 3: personalwebsite.identity.roles.userroleassignments.GetStatusByIdResponse.status:type_name -> personalwebsite.identity.roles.userroleassignments.UserRoleAssignmentStatusEnum.UserRoleAssignmentStatus
	19, // 4: personalwebsite.identity.roles.userroleassignments.GetStatusByRoleAssignmentIdResponse.status:type_name -> personalwebsite.identity.roles.userroleassignments.UserRoleAssignmentStatusEnum.UserRoleAssignmentStatus
	0,  // 5: personalwebsite.identity.roles.userroleassignments.UserRoleAssignmentService.GetById:input_type -> personalwebsite.identity.roles.userroleassignments.GetByIdRequest
	2,  // 6: personalwebsite.identity.roles.userroleassignments.UserRoleAssignmentService.GetByRoleAssignmentId:input_type -> personalwebsite.identity.roles.userroleassignments.GetByRoleAssignmentIdRequest
	4,  // 7: personalwebsite.identity.roles.userroleassignments.UserRoleAssignmentService.GetAllByUserId:input_type -> personalwebsite.identity.roles.userroleassignments.GetAllByUserIdRequest
	6,  // 8: personalwebsite.identity.roles.userroleassignments.UserRoleAssignmentService.Exists:input_type -> personalwebsite.identity.roles.userroleassignments.ExistsRequest
	8,  // 9: personalwebsite.identity.roles.userroleassignments.UserRoleAssignmentService.IsAssigned:input_type -> personalwebsite.identity.roles.userroleassignments.IsAssignedRequest
	10, // 10: personalwebsite.identity.roles.userroleassignments.UserRoleAssignmentService.GetIdByRoleAssignmentId:input_type -> personalwebsite.identity.roles.userroleassignments.GetIdByRoleAssignmentIdRequest
	12, // 11: personalwebsite.identity.roles.userroleassignments.UserRoleAssignmentService.GetStatusById:input_type -> personalwebsite.identity.roles.userroleassignments.GetStatusByIdRequest
	14, // 12: personalwebsite.identity.roles.userroleassignments.UserRoleAssignmentService.GetStatusByRoleAssignmentId:input_type -> personalwebsite.identity.roles.userroleassignments.GetStatusByRoleAssignmentIdRequest
	16, // 13: personalwebsite.identity.roles.userroleassignments.UserRoleAssignmentService.GetUserRoleIdsByUserId:input_type -> personalwebsite.identity.roles.userroleassignments.GetUserRoleIdsByUserIdRequest
	1,  // 14: personalwebsite.identity.roles.userroleassignments.UserRoleAssignmentService.GetById:output_type -> personalwebsite.identity.roles.userroleassignments.GetByIdResponse
	3,  // 15: personalwebsite.identity.roles.userroleassignments.UserRoleAssignmentService.GetByRoleAssignmentId:output_type -> personalwebsite.identity.roles.userroleassignments.GetByRoleAssignmentIdResponse
	5,  // 16: personalwebsite.identity.roles.userroleassignments.UserRoleAssignmentService.GetAllByUserId:output_type -> personalwebsite.identity.roles.userroleassignments.GetAllByUserIdResponse
	7,  // 17: personalwebsite.identity.roles.userroleassignments.UserRoleAssignmentService.Exists:output_type -> personalwebsite.identity.roles.userroleassignments.ExistsResponse
	9,  // 18: personalwebsite.identity.roles.userroleassignments.UserRoleAssignmentService.IsAssigned:output_type -> personalwebsite.identity.roles.userroleassignments.IsAssignedResponse
	11, // 19: personalwebsite.identity.roles.userroleassignments.UserRoleAssignmentService.GetIdByRoleAssignmentId:output_type -> personalwebsite.identity.roles.userroleassignments.GetIdByRoleAssignmentIdResponse
	13, // 20: personalwebsite.identity.roles.userroleassignments.UserRoleAssignmentService.GetStatusById:output_type -> personalwebsite.identity.roles.userroleassignments.GetStatusByIdResponse
	15, // 21: personalwebsite.identity.roles.userroleassignments.UserRoleAssignmentService.GetStatusByRoleAssignmentId:output_type -> personalwebsite.identity.roles.userroleassignments.GetStatusByRoleAssignmentIdResponse
	17, // 22: personalwebsite.identity.roles.userroleassignments.UserRoleAssignmentService.GetUserRoleIdsByUserId:output_type -> personalwebsite.identity.roles.userroleassignments.GetUserRoleIdsByUserIdResponse
	14, // [14:23] is the sub-list for method output_type
	5,  // [5:14] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_init() }
func file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_init() {
	if File_apis_identity_roles_userroleassignments_user_role_assignment_service_proto != nil {
		return
	}
	file_apis_identity_roles_userroleassignments_user_role_assignment_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByRoleAssignmentIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByRoleAssignmentIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllByUserIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllByUserIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAssignedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAssignedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdByRoleAssignmentIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdByRoleAssignmentIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusByRoleAssignmentIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusByRoleAssignmentIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRoleIdsByUserIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRoleIdsByUserIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_goTypes,
		DependencyIndexes: file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_depIdxs,
		MessageInfos:      file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_msgTypes,
	}.Build()
	File_apis_identity_roles_userroleassignments_user_role_assignment_service_proto = out.File
	file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_rawDesc = nil
	file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_goTypes = nil
	file_apis_identity_roles_userroleassignments_user_role_assignment_service_proto_depIdxs = nil
}
