// Copyright 2023 Alexey Lavrenchenko. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.3
// source: apis/identity/permissions/rolepermissions/role_permission_service.proto

package rolepermissions

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for 'RolePermissionService.Grant'.
type GrantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The role ID.
	RoleId uint64 `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// The permission IDs.
	PermissionIds []uint64 `protobuf:"varint,2,rep,packed,name=permission_ids,json=permissionIds,proto3" json:"permission_ids,omitempty"`
}

func (x *GrantRequest) Reset() {
	*x = GrantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantRequest) ProtoMessage() {}

func (x *GrantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantRequest.ProtoReflect.Descriptor instead.
func (*GrantRequest) Descriptor() ([]byte, []int) {
	return file_apis_identity_permissions_rolepermissions_role_permission_service_proto_rawDescGZIP(), []int{0}
}

func (x *GrantRequest) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *GrantRequest) GetPermissionIds() []uint64 {
	if x != nil {
		return x.PermissionIds
	}
	return nil
}

// Request message for 'RolePermissionService.Revoke'.
type RevokeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The role ID.
	RoleId uint64 `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// The permission IDs.
	PermissionIds []uint64 `protobuf:"varint,2,rep,packed,name=permission_ids,json=permissionIds,proto3" json:"permission_ids,omitempty"`
}

func (x *RevokeRequest) Reset() {
	*x = RevokeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeRequest) ProtoMessage() {}

func (x *RevokeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeRequest.ProtoReflect.Descriptor instead.
func (*RevokeRequest) Descriptor() ([]byte, []int) {
	return file_apis_identity_permissions_rolepermissions_role_permission_service_proto_rawDescGZIP(), []int{1}
}

func (x *RevokeRequest) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *RevokeRequest) GetPermissionIds() []uint64 {
	if x != nil {
		return x.PermissionIds
	}
	return nil
}

// Request message for 'RolePermissionService.RevokeAll'.
type RevokeAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The role ID.
	RoleId uint64 `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *RevokeAllRequest) Reset() {
	*x = RevokeAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeAllRequest) ProtoMessage() {}

func (x *RevokeAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeAllRequest.ProtoReflect.Descriptor instead.
func (*RevokeAllRequest) Descriptor() ([]byte, []int) {
	return file_apis_identity_permissions_rolepermissions_role_permission_service_proto_rawDescGZIP(), []int{2}
}

func (x *RevokeAllRequest) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

// Request message for 'RolePermissionService.RevokeFromAll'.
type RevokeFromAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The permission IDs.
	PermissionIds []uint64 `protobuf:"varint,1,rep,packed,name=permission_ids,json=permissionIds,proto3" json:"permission_ids,omitempty"`
}

func (x *RevokeFromAllRequest) Reset() {
	*x = RevokeFromAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeFromAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeFromAllRequest) ProtoMessage() {}

func (x *RevokeFromAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeFromAllRequest.ProtoReflect.Descriptor instead.
func (*RevokeFromAllRequest) Descriptor() ([]byte, []int) {
	return file_apis_identity_permissions_rolepermissions_role_permission_service_proto_rawDescGZIP(), []int{3}
}

func (x *RevokeFromAllRequest) GetPermissionIds() []uint64 {
	if x != nil {
		return x.PermissionIds
	}
	return nil
}

// Request message for 'RolePermissionService.Update'.
type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The role ID.
	RoleId uint64 `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// The permission IDs to grant.
	PermissionIdsToGrant []uint64 `protobuf:"varint,2,rep,packed,name=permission_ids_to_grant,json=permissionIdsToGrant,proto3" json:"permission_ids_to_grant,omitempty"`
	// The permission IDs to revoke.
	PermissionIdsToRevoke []uint64 `protobuf:"varint,3,rep,packed,name=permission_ids_to_revoke,json=permissionIdsToRevoke,proto3" json:"permission_ids_to_revoke,omitempty"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_apis_identity_permissions_rolepermissions_role_permission_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateRequest) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *UpdateRequest) GetPermissionIdsToGrant() []uint64 {
	if x != nil {
		return x.PermissionIdsToGrant
	}
	return nil
}

func (x *UpdateRequest) GetPermissionIdsToRevoke() []uint64 {
	if x != nil {
		return x.PermissionIdsToRevoke
	}
	return nil
}

// Request message for 'RolePermissionService.IsGranted'.
type IsGrantedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The role ID.
	RoleId uint64 `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// The permission ID.
	PermissionId uint64 `protobuf:"varint,2,opt,name=permission_id,json=permissionId,proto3" json:"permission_id,omitempty"`
}

func (x *IsGrantedRequest) Reset() {
	*x = IsGrantedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsGrantedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsGrantedRequest) ProtoMessage() {}

func (x *IsGrantedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsGrantedRequest.ProtoReflect.Descriptor instead.
func (*IsGrantedRequest) Descriptor() ([]byte, []int) {
	return file_apis_identity_permissions_rolepermissions_role_permission_service_proto_rawDescGZIP(), []int{5}
}

func (x *IsGrantedRequest) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *IsGrantedRequest) GetPermissionId() uint64 {
	if x != nil {
		return x.PermissionId
	}
	return 0
}

// Response message for 'RolePermissionService.IsGranted'.
type IsGrantedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsGranted bool `protobuf:"varint,1,opt,name=is_granted,json=isGranted,proto3" json:"is_granted,omitempty"`
}

func (x *IsGrantedResponse) Reset() {
	*x = IsGrantedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsGrantedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsGrantedResponse) ProtoMessage() {}

func (x *IsGrantedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsGrantedResponse.ProtoReflect.Descriptor instead.
func (*IsGrantedResponse) Descriptor() ([]byte, []int) {
	return file_apis_identity_permissions_rolepermissions_role_permission_service_proto_rawDescGZIP(), []int{6}
}

func (x *IsGrantedResponse) GetIsGranted() bool {
	if x != nil {
		return x.IsGranted
	}
	return false
}

// Request message for 'RolePermissionService.AreGranted'.
type AreGrantedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The role ID.
	RoleId uint64 `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// The permission IDs.
	PermissionIds []uint64 `protobuf:"varint,2,rep,packed,name=permission_ids,json=permissionIds,proto3" json:"permission_ids,omitempty"`
}

func (x *AreGrantedRequest) Reset() {
	*x = AreGrantedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreGrantedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreGrantedRequest) ProtoMessage() {}

func (x *AreGrantedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreGrantedRequest.ProtoReflect.Descriptor instead.
func (*AreGrantedRequest) Descriptor() ([]byte, []int) {
	return file_apis_identity_permissions_rolepermissions_role_permission_service_proto_rawDescGZIP(), []int{7}
}

func (x *AreGrantedRequest) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *AreGrantedRequest) GetPermissionIds() []uint64 {
	if x != nil {
		return x.PermissionIds
	}
	return nil
}

// Response message for 'RolePermissionService.AreGranted'.
type AreGrantedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreGranted bool `protobuf:"varint,1,opt,name=are_granted,json=areGranted,proto3" json:"are_granted,omitempty"`
}

func (x *AreGrantedResponse) Reset() {
	*x = AreGrantedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreGrantedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreGrantedResponse) ProtoMessage() {}

func (x *AreGrantedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreGrantedResponse.ProtoReflect.Descriptor instead.
func (*AreGrantedResponse) Descriptor() ([]byte, []int) {
	return file_apis_identity_permissions_rolepermissions_role_permission_service_proto_rawDescGZIP(), []int{8}
}

func (x *AreGrantedResponse) GetAreGranted() bool {
	if x != nil {
		return x.AreGranted
	}
	return false
}

// Request message for 'RolePermissionService.GetAllPermissionIdsByRoleId'.
type GetAllPermissionIdsByRoleIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The role ID.
	RoleId uint64 `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *GetAllPermissionIdsByRoleIdRequest) Reset() {
	*x = GetAllPermissionIdsByRoleIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllPermissionIdsByRoleIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllPermissionIdsByRoleIdRequest) ProtoMessage() {}

func (x *GetAllPermissionIdsByRoleIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllPermissionIdsByRoleIdRequest.ProtoReflect.Descriptor instead.
func (*GetAllPermissionIdsByRoleIdRequest) Descriptor() ([]byte, []int) {
	return file_apis_identity_permissions_rolepermissions_role_permission_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetAllPermissionIdsByRoleIdRequest) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

// Response message for 'RolePermissionService.GetAllPermissionIdsByRoleId'.
type GetAllPermissionIdsByRoleIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The permission IDs.
	PermissionIds []uint64 `protobuf:"varint,1,rep,packed,name=permission_ids,json=permissionIds,proto3" json:"permission_ids,omitempty"`
}

func (x *GetAllPermissionIdsByRoleIdResponse) Reset() {
	*x = GetAllPermissionIdsByRoleIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllPermissionIdsByRoleIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllPermissionIdsByRoleIdResponse) ProtoMessage() {}

func (x *GetAllPermissionIdsByRoleIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllPermissionIdsByRoleIdResponse.ProtoReflect.Descriptor instead.
func (*GetAllPermissionIdsByRoleIdResponse) Descriptor() ([]byte, []int) {
	return file_apis_identity_permissions_rolepermissions_role_permission_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetAllPermissionIdsByRoleIdResponse) GetPermissionIds() []uint64 {
	if x != nil {
		return x.PermissionIds
	}
	return nil
}

// Request message for 'RolePermissionService.GetAllRoleIdsByPermissionId'.
type GetAllRoleIdsByPermissionIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The permission ID.
	PermissionId uint64 `protobuf:"varint,1,opt,name=permission_id,json=permissionId,proto3" json:"permission_id,omitempty"`
}

func (x *GetAllRoleIdsByPermissionIdRequest) Reset() {
	*x = GetAllRoleIdsByPermissionIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllRoleIdsByPermissionIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllRoleIdsByPermissionIdRequest) ProtoMessage() {}

func (x *GetAllRoleIdsByPermissionIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllRoleIdsByPermissionIdRequest.ProtoReflect.Descriptor instead.
func (*GetAllRoleIdsByPermissionIdRequest) Descriptor() ([]byte, []int) {
	return file_apis_identity_permissions_rolepermissions_role_permission_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetAllRoleIdsByPermissionIdRequest) GetPermissionId() uint64 {
	if x != nil {
		return x.PermissionId
	}
	return 0
}

// Response message for 'RolePermissionService.GetAllRoleIdsByPermissionId'.
type GetAllRoleIdsByPermissionIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The role IDs.
	RoleIds []uint64 `protobuf:"varint,1,rep,packed,name=role_ids,json=roleIds,proto3" json:"role_ids,omitempty"`
}

func (x *GetAllRoleIdsByPermissionIdResponse) Reset() {
	*x = GetAllRoleIdsByPermissionIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllRoleIdsByPermissionIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllRoleIdsByPermissionIdResponse) ProtoMessage() {}

func (x *GetAllRoleIdsByPermissionIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllRoleIdsByPermissionIdResponse.ProtoReflect.Descriptor instead.
func (*GetAllRoleIdsByPermissionIdResponse) Descriptor() ([]byte, []int) {
	return file_apis_identity_permissions_rolepermissions_role_permission_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetAllRoleIdsByPermissionIdResponse) GetRoleIds() []uint64 {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

var File_apis_identity_permissions_rolepermissions_role_permission_service_proto protoreflect.FileDescriptor

var file_apis_identity_permissions_rolepermissions_role_permission_service_proto_rawDesc = []byte{
	0x0a, 0x47, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x6f, 0x6c, 0x65,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x6f, 0x6c, 0x65,
	0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x34, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x72, 0x6f, 0x6c, 0x65, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4e, 0x0a, 0x0c,
	0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0d, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22, 0x4f, 0x0a, 0x0d,
	0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0d,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22, 0x2b, 0x0a,
	0x10, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x14, 0x52, 0x65,
	0x76, 0x6f, 0x6b, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x0d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x17, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x14, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x73, 0x54, 0x6f, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x18, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x5f, 0x74, 0x6f,
	0x5f, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x15, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x54, 0x6f, 0x52, 0x65,
	0x76, 0x6f, 0x6b, 0x65, 0x22, 0x50, 0x0a, 0x10, 0x49, 0x73, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x11, 0x49, 0x73, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x22, 0x53, 0x0a, 0x11, 0x41, 0x72,
	0x65, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04,
	0x52, 0x0d, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22,
	0x35, 0x0a, 0x12, 0x41, 0x72, 0x65, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x72, 0x65, 0x5f, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x72, 0x65, 0x47,
	0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x22, 0x3d, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x42, 0x79, 0x52,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x42, 0x79, 0x52, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x04, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x73, 0x22, 0x49, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x73, 0x42, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x40,
	0x0a, 0x23, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x42,
	0x79, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73,
	0x32, 0xa9, 0x0a, 0x0a, 0x15, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x65, 0x0a, 0x05, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x12, 0x42, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65,
	0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x67, 0x0a, 0x06, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x12, 0x43, 0x2e, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x09, 0x52, 0x65,
	0x76, 0x6f, 0x6b, 0x65, 0x41, 0x6c, 0x6c, 0x12, 0x46, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x72,
	0x6f, 0x6c, 0x65, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x0d, 0x52, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x6c, 0x6c, 0x12, 0x4a, 0x2e, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x6c, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x67, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x43, 0x2e, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x9e, 0x01, 0x0a, 0x09, 0x49, 0x73,
	0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x12, 0x46, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x72,
	0x6f, 0x6c, 0x65, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49,
	0x73, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x47, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74,
	0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x73, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa1, 0x01, 0x0a, 0x0a, 0x41,
	0x72, 0x65, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x12, 0x47, 0x2e, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x41, 0x72, 0x65, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x48, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62,
	0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x72, 0x65, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xd4,
	0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x58,
	0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x59, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x72, 0x6f, 0x6c, 0x65, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x73, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xd4, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x42, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x58, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x72, 0x6f, 0x6c,
	0x65, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x42, 0x79, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x59, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74,
	0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x73, 0x42, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x52, 0x5a, 0x50,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x2d, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65,
	0x2d, 0x76, 0x32, 0x2f, 0x67, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x3b, 0x72, 0x6f, 0x6c, 0x65, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_apis_identity_permissions_rolepermissions_role_permission_service_proto_rawDescOnce sync.Once
	file_apis_identity_permissions_rolepermissions_role_permission_service_proto_rawDescData = file_apis_identity_permissions_rolepermissions_role_permission_service_proto_rawDesc
)

func file_apis_identity_permissions_rolepermissions_role_permission_service_proto_rawDescGZIP() []byte {
	file_apis_identity_permissions_rolepermissions_role_permission_service_proto_rawDescOnce.Do(func() {
		file_apis_identity_permissions_rolepermissions_role_permission_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_apis_identity_permissions_rolepermissions_role_permission_service_proto_rawDescData)
	})
	return file_apis_identity_permissions_rolepermissions_role_permission_service_proto_rawDescData
}

var file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_apis_identity_permissions_rolepermissions_role_permission_service_proto_goTypes = []interface{}{
	(*GrantRequest)(nil),                        // 0: personalwebsite.identity.permissions.rolepermissions.GrantRequest
	(*RevokeRequest)(nil),                       // 1: personalwebsite.identity.permissions.rolepermissions.RevokeRequest
	(*RevokeAllRequest)(nil),                    // 2: personalwebsite.identity.permissions.rolepermissions.RevokeAllRequest
	(*RevokeFromAllRequest)(nil),                // 3: personalwebsite.identity.permissions.rolepermissions.RevokeFromAllRequest
	(*UpdateRequest)(nil),                       // 4: personalwebsite.identity.permissions.rolepermissions.UpdateRequest
	(*IsGrantedRequest)(nil),                    // 5: personalwebsite.identity.permissions.rolepermissions.IsGrantedRequest
	(*IsGrantedResponse)(nil),                   // 6: personalwebsite.identity.permissions.rolepermissions.IsGrantedResponse
	(*AreGrantedRequest)(nil),                   // 7: personalwebsite.identity.permissions.rolepermissions.AreGrantedRequest
	(*AreGrantedResponse)(nil),                  // 8: personalwebsite.identity.permissions.rolepermissions.AreGrantedResponse
	(*GetAllPermissionIdsByRoleIdRequest)(nil),  // 9: personalwebsite.identity.permissions.rolepermissions.GetAllPermissionIdsByRoleIdRequest
	(*GetAllPermissionIdsByRoleIdResponse)(nil), // 10: personalwebsite.identity.permissions.rolepermissions.GetAllPermissionIdsByRoleIdResponse
	(*GetAllRoleIdsByPermissionIdRequest)(nil),  // 11: personalwebsite.identity.permissions.rolepermissions.GetAllRoleIdsByPermissionIdRequest
	(*GetAllRoleIdsByPermissionIdResponse)(nil), // 12: personalwebsite.identity.permissions.rolepermissions.GetAllRoleIdsByPermissionIdResponse
	(*emptypb.Empty)(nil),                       // 13: google.protobuf.Empty
}
var file_apis_identity_permissions_rolepermissions_role_permission_service_proto_depIdxs = []int32{
	0,  // 0: personalwebsite.identity.permissions.rolepermissions.RolePermissionService.Grant:input_type -> personalwebsite.identity.permissions.rolepermissions.GrantRequest
	1,  // 1: personalwebsite.identity.permissions.rolepermissions.RolePermissionService.Revoke:input_type -> personalwebsite.identity.permissions.rolepermissions.RevokeRequest
	2,  // 2: personalwebsite.identity.permissions.rolepermissions.RolePermissionService.RevokeAll:input_type -> personalwebsite.identity.permissions.rolepermissions.RevokeAllRequest
	3,  // 3: personalwebsite.identity.permissions.rolepermissions.RolePermissionService.RevokeFromAll:input_type -> personalwebsite.identity.permissions.rolepermissions.RevokeFromAllRequest
	4,  // 4: personalwebsite.identity.permissions.rolepermissions.RolePermissionService.Update:input_type -> personalwebsite.identity.permissions.rolepermissions.UpdateRequest
	5,  // 5: personalwebsite.identity.permissions.rolepermissions.RolePermissionService.IsGranted:input_type -> personalwebsite.identity.permissions.rolepermissions.IsGrantedRequest
	7,  // 6: personalwebsite.identity.permissions.rolepermissions.RolePermissionService.AreGranted:input_type -> personalwebsite.identity.permissions.rolepermissions.AreGrantedRequest
	9,  // 7: personalwebsite.identity.permissions.rolepermissions.RolePermissionService.GetAllPermissionIdsByRoleId:input_type -> personalwebsite.identity.permissions.rolepermissions.GetAllPermissionIdsByRoleIdRequest
	11, // 8: personalwebsite.identity.permissions.rolepermissions.RolePermissionService.GetAllRoleIdsByPermissionId:input_type -> personalwebsite.identity.permissions.rolepermissions.GetAllRoleIdsByPermissionIdRequest
	13, // 9: personalwebsite.identity.permissions.rolepermissions.RolePermissionService.Grant:output_type -> google.protobuf.Empty
	13, // 10: personalwebsite.identity.permissions.rolepermissions.RolePermissionService.Revoke:output_type -> google.protobuf.Empty
	13, // 11: personalwebsite.identity.permissions.rolepermissions.RolePermissionService.RevokeAll:output_type -> google.protobuf.Empty
	13, // 12: personalwebsite.identity.permissions.rolepermissions.RolePermissionService.RevokeFromAll:output_type -> google.protobuf.Empty
	13, // 13: personalwebsite.identity.permissions.rolepermissions.RolePermissionService.Update:output_type -> google.protobuf.Empty
	6,  // 14: personalwebsite.identity.permissions.rolepermissions.RolePermissionService.IsGranted:output_type -> personalwebsite.identity.permissions.rolepermissions.IsGrantedResponse
	8,  // 15: personalwebsite.identity.permissions.rolepermissions.RolePermissionService.AreGranted:output_type -> personalwebsite.identity.permissions.rolepermissions.AreGrantedResponse
	10, // 16: personalwebsite.identity.permissions.rolepermissions.RolePermissionService.GetAllPermissionIdsByRoleId:output_type -> personalwebsite.identity.permissions.rolepermissions.GetAllPermissionIdsByRoleIdResponse
	12, // 17: personalwebsite.identity.permissions.rolepermissions.RolePermissionService.GetAllRoleIdsByPermissionId:output_type -> personalwebsite.identity.permissions.rolepermissions.GetAllRoleIdsByPermissionIdResponse
	9,  // [9:18] is the sub-list for method output_type
	0,  // [0:9] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_apis_identity_permissions_rolepermissions_role_permission_service_proto_init() }
func file_apis_identity_permissions_rolepermissions_role_permission_service_proto_init() {
	if File_apis_identity_permissions_rolepermissions_role_permission_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeFromAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsGrantedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsGrantedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreGrantedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreGrantedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllPermissionIdsByRoleIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllPermissionIdsByRoleIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllRoleIdsByPermissionIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllRoleIdsByPermissionIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apis_identity_permissions_rolepermissions_role_permission_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apis_identity_permissions_rolepermissions_role_permission_service_proto_goTypes,
		DependencyIndexes: file_apis_identity_permissions_rolepermissions_role_permission_service_proto_depIdxs,
		MessageInfos:      file_apis_identity_permissions_rolepermissions_role_permission_service_proto_msgTypes,
	}.Build()
	File_apis_identity_permissions_rolepermissions_role_permission_service_proto = out.File
	file_apis_identity_permissions_rolepermissions_role_permission_service_proto_rawDesc = nil
	file_apis_identity_permissions_rolepermissions_role_permission_service_proto_goTypes = nil
	file_apis_identity_permissions_rolepermissions_role_permission_service_proto_depIdxs = nil
}
